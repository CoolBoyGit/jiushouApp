//
//  CreateCommentViewController.m
//  MFBank
//
//  Created by lyywhg on 15/12/5.
//  Copyright (c) 2015年 MFBank. All rights reserved.
//

#import "PostCommentViewController.h"
#import "PostCommentCell.h"
#import "ImageViewScrollView.h"
#import "JKImagePickerController.h"
#import "JKAssets.h"
#import <AssetsLibrary/AssetsLibrary.h>
#import "ALAssetsLibrary+Extend.h"
#import "ESStarRateCell.h"
#import "ESCommentBottonView.h"

@interface PostCommentViewController ()<UITextViewDelegate,UITableViewDelegate,UITableViewDataSource,JKImagePickerControllerDelegate,CreateCommentDelegate>

@property (nonatomic, strong) UITableView *tableView;

@property (nonatomic, strong) NSMutableArray   *assetsArray;


/** indicator */
@property (nonatomic,strong) ESIndicator *indicator;
/** bottom */
@property (nonatomic,weak) ESCommentBottonView *bottomView;

/** 评论的上传图片 (item : UIImage ) */
@property (nonatomic,strong) NSMutableArray *imageItems;
/** 评论内容 */
@property (nonatomic,copy) NSString *content;
/** 评分 */
@property (nonatomic,strong) NSNumber *result;

/** 评星 */
@property (nonatomic,strong) CommentStartInfo *startInfo;


@end

@implementation PostCommentViewController

- (NSMutableArray *)assetsArray
{
    if (!_assetsArray) {
        _assetsArray = [NSMutableArray array];
    }
    return _assetsArray;
}

- (NSMutableArray *)imageItems
{
    if (!_imageItems) {
        _imageItems = [NSMutableArray array];
    }
    return _imageItems;
}

- (ESIndicator *)indicator
{
    if (!_indicator) {
        _indicator = [ESIndicator indicatorToView:self.view];
    }
    return _indicator;
}

- (CommentStartInfo *)startInfo
{
    if (!_startInfo) {
        _startInfo = [[CommentStartInfo alloc] init];
    }
    return _startInfo;
}

- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.delegate = self;
        _tableView.tableFooterView = [[UIView alloc] init];
        [_tableView registerClass:[PostCommentCell class] forCellReuseIdentifier:@"ShopCommentCellIdentifier"];
        [_tableView registerClass:[ESStarRateCell  class] forCellReuseIdentifier:@"ESStarRateCell"];
    }
    return _tableView;
}


#pragma mark - LifeCycle
- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"发表评价";
    [self.view addSubview:self.tableView];
    self.tableView.scrollEnabled=NO;
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(@0);
        make.top.equalTo(@0);
        make.bottom.equalTo(@-44);
    }];
    
    ESCommentBottonView *view = [[ESCommentBottonView alloc] initWithFrame:CGRectMake(0, ScreenHeight-49, ScreenWidth, 49)];
    [self.view addSubview:view];
    self.bottomView = view;
    [view mas_makeConstraints:^(MASConstraintMaker *make) {
        make.height.equalTo(@49);
        make.bottom.equalTo(@0);
        make.right.left.equalTo(@0);
    }];
    @weakify(self);
    view.sureBlock = ^{
      @strongify(self);
        if (self.imageItems.count > 0) {//有图片
            [self uploadImage];
        }else{
            [self doEvaluateWithImage:nil];

        }
    };
    
}

/**
 *  打开照片库
 */
- (void)photoLibraryAction {
    JKImagePickerController *imagePickerController = [[JKImagePickerController alloc] init];
    imagePickerController.delegate = self;
    imagePickerController.showsCancelButton = YES;
    imagePickerController.allowsMultipleSelection = YES;
    imagePickerController.minimumNumberOfSelection = 1;
    imagePickerController.maximumNumberOfSelection = 3;
    imagePickerController.selectedAssetArray = self.assetsArray;

    UINavigationController *navigationController = [[UINavigationController alloc] initWithRootViewController:imagePickerController];
    [self presentViewController:navigationController animated:YES completion:NULL];
}

#pragma mark - JKImagePickerControllerDelegate
- (void)imagePickerControllerDidCancel:(JKImagePickerController *)imagePicker
{
    [imagePicker dismissViewControllerAnimated:YES completion:^{
        
    }];
}
- (void)imagePickerController:(JKImagePickerController *)imagePicker didSelectAssets:(NSArray *)assets isSource:(BOOL)source
{
    
    [imagePicker dismissViewControllerAnimated:YES completion:^{
        
    }];
    
    self.assetsArray = [NSMutableArray arrayWithArray:assets];
    
    [self.imageItems removeAllObjects];
    for (int i = 0; i < self.assetsArray.count; i++) {
        JKAssets *jka = self.assetsArray[i];
        ALAssetsLibrary   *lib = [[ALAssetsLibrary alloc] init];
        [lib extend_assetForURL:jka.assetPropertyURL resultBlock:^(ALAsset *asset) {
            if (asset) {
                UIImage *image = [UIImage imageWithCGImage:[asset thumbnail]];
                
                [self.imageItems addObject:image];
                [self.tableView reloadData];
            
            }
        } failureBlock:^(NSError *error) {
            
        }];
    }
}
- (void)cameraAction {
    UIImagePickerController *picker = [[UIImagePickerController alloc] init];
    picker.delegate = (id <UINavigationControllerDelegate, UIImagePickerControllerDelegate>)self;
    picker.sourceType = UIImagePickerControllerSourceTypeCamera;
    [self presentViewController:picker animated:YES completion:nil];
}
#pragma mark
#pragma mark Other Delegate & Datasource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 2;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 10;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        return 210;
    }
    return 160;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        static NSString *ShopCommentCellIdentifier = @"ShopCommentCellIdentifier";
        PostCommentCell *cell = [tableView dequeueReusableCellWithIdentifier:ShopCommentCellIdentifier];
        [cell updateViewInfoWithInfo:nil index:indexPath.section];
        cell.selectionStyle=UITableViewCellSelectionStyleNone;
        cell.commentTextView.tag = indexPath.section;
        cell.commentTextView.delegate = (id<UITextViewDelegate>)self;
        cell.delegate = (id<CreateCommentDelegate>)self;
        cell.imageItems = self.imageItems;
        return cell;
    }
    ESStarRateCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESStarRateCell"];
    cell.startInfo = self.startInfo;
    
    return cell;
}

#pragma mark - CreateCommentDelegate

- (void)cBtnTouchAction:(NSInteger)btnIndex cellIndex:(NSInteger)cellIndex
{
    
}

- (void)cAddPhotoActionWithCellIndex:(NSInteger)cellIndex {
    
    [self photoLibraryAction];
}
- (void)cDeleteTouchAction:(NSInteger)btnIndex cellIndex:(NSInteger)cellIndex {
    
}

- (void)didSelectResult:(NSInteger)result
{
    self.result = [NSNumber numberWithInteger:result+1];
}

#pragma mark - UITextViewDelegate

-(BOOL)textView:(PlaceholderTextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text
{
    textView.textColor = ADeanHEXCOLOR(0x323232);
    textView.font = ADeanFONT17;
    NSString * toBeString = [textView.text stringByReplacingCharactersInRange:range withString:text];
    
    if (toBeString.length >120) {
        return NO;
    }
    return YES;
}

- (void)textViewDidChange:(UITextView *)textView
{
    self.content = textView.text;
}

#pragma mark - Networking

- (void)uploadImage
{
    FileUploadRequest *request = [FileUploadRequest request];
    request.imageItems = self.imageItems;
    
    @weakify(self);
    [self.indicator startAnimation];
    [ESService fileUploadRequest:request success:^(NSArray *response) {
        @strongify(self);
//        [self endGSNetworking];
        
        //上传成功
        [self doEvaluateWithImage:response];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}
#pragma mark - 发表评论
- (void)doEvaluateWithImage:(NSArray *)image
{
    AddEvaluationRequest *request = [AddEvaluationRequest request];
    request.order_id = self.order_id;
    
    request.content  = self.content;
    request.result   = self.result;
    request.scores   = self.startInfo.scores;
    request.delivery_scores = self.startInfo.delivery_scores;
    request.logistics_scores = self.startInfo.logistics_scores;
    request.is_anonymous  = self.bottomView.isAnonymous ? @1 : @0;
    request.image       = image;
    
    
    @weakify(self);
    [self.indicator startAnimation];
    [ESService addEvaluationRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [ESToast showSuccess:@"评价成功！"];
        [self.navigationController popToRootViewControllerAnimated:YES];
        
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.indicator stopAnimation];
}

@end
