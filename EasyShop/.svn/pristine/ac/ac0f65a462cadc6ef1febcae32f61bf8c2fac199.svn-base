//
//  ESShopCommentCell.m
//  EasyShop
//
//  Created by wcz on 16/6/5.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESShopCommentCell.h"
#import "ESImageCollectionViewCell.h"
#import "GSTimeTool.h"
#import "ImagesSkimView.h"
#import "MWPhotoBrowser.h"
#import "MWCommon.h"
@interface ESShopCommentCell ()<UICollectionViewDelegate,UICollectionViewDataSource,UICollectionViewDelegateFlowLayout,MWPhotoBrowserDelegate>

@property (nonatomic, strong) UILabel *userMobile;//用户
@property (nonatomic, strong) UILabel *timeLable;//评价时间
@property (nonatomic, strong) UILabel *commentLabel;//评价内容
@property (nonatomic, strong) UILabel *lineLabel;//分割线
@property (nonatomic, strong) UICollectionView *collectionview;
@property (nonatomic, strong) NSMutableArray *photos;
@end



@implementation ESShopCommentCell

- (void)setItem:(GoodEvaluationItem *)item
{
    _item = item;
    self.lineLabel.frame=_item.lineFrame;
    self.userMobile.frame = _item.nameFrame;
    self.timeLable.frame = _item.timeFrame;
    self.commentLabel.frame = _item.contentFrame;
    self.collectionview.frame = _item.imageFrame;
    self.userMobile.text=[_item.evaluationInfo.member_name stringByReplacingCharactersInRange:NSMakeRange(4, 4) withString:@"****"];
    //self.userMobile.text = _item.evaluationInfo.member_name;
    self.timeLable.text = [GSTimeTool formatterNumber:_item.evaluationInfo.create_time toType:GSTimeType_YYMMddHHmm];
    self.commentLabel.text = _item.evaluationInfo.content;
}

- (UICollectionView *)collectionview
{
    if (_collectionview == nil) {
        UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc] init];
        flowLayout.minimumInteritemSpacing = 10;
        flowLayout.minimumLineSpacing = 10;
        flowLayout.scrollDirection = UICollectionViewScrollDirectionHorizontal;
        //             flowLayout.itemSize = CGSizeMake(ScreenWidth, 125);
        _collectionview = [[UICollectionView alloc]initWithFrame:CGRectZero collectionViewLayout:flowLayout];
        _collectionview.dataSource = self;
        _collectionview.pagingEnabled = YES;
        _collectionview.showsVerticalScrollIndicator = NO;
        _collectionview.showsHorizontalScrollIndicator = NO;
        _collectionview.delegate = self;
        [_collectionview registerClass:[ESImageCollectionViewCell class] forCellWithReuseIdentifier:@"ESImageCollectionViewCell"];
        _collectionview.backgroundColor = [UIColor whiteColor];
    }
    return _collectionview;
}

#pragma mark
#pragma mark Init & Add
- (UILabel *)lineLabel {
    if (!_lineLabel) {
        _lineLabel = [[UILabel alloc] init];
        _lineLabel.backgroundColor = KCommontLineViewBagroudColor;
    }
    return _lineLabel;
}
- (UILabel *)userMobile {
    if (!_userMobile) {
        _userMobile = [[UILabel alloc] init];
        _userMobile.font = ADeanFONT14;
        _userMobile.textAlignment = NSTextAlignmentLeft;
        _userMobile.textColor = ADeanHEXCOLOR(0x333333);
    }
    return _userMobile;
}
- (UILabel *)timeLable {
    if (!_timeLable) {
        _timeLable = [[UILabel alloc] init];
        _timeLable.font = ADeanFONT14;
        _timeLable.textAlignment = NSTextAlignmentRight;
        _timeLable.textColor = ADeanHEXCOLOR(0x999999);
    }
    return _timeLable;
}
- (UILabel *)commentLabel {
    
    if (!_commentLabel) {
        _commentLabel = [[UILabel alloc] init];
        _commentLabel.numberOfLines = 0;
        _commentLabel.font = ADeanFONT14;
        _commentLabel.textColor = ADeanHEXCOLOR(0x999999);
    }
    return _commentLabel;
}

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
{
    if (self = [super initWithStyle:style reuseIdentifier:reuseIdentifier]) {
        

        [self.contentView addSubview:self.userMobile];
        
        [self.contentView addSubview:self.timeLable];

        
        [self.contentView addSubview:self.commentLabel];
        
        [self.contentView addSubview:self.collectionview];
        [self.contentView addSubview:self.lineLabel];
    }
    return self;
}


-(void)intalizedView
{
    [self.contentView addSubview:self.userMobile];
    [self.userMobile mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@(18));
        make.top.equalTo(@(6.5));
        make.width.equalTo(@130);
        make.height.equalTo(@20);
    }];
    
    [self.contentView addSubview:self.timeLable];
    [self.timeLable mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(@(-18));
        make.top.equalTo(@(6.5));
        make.width.equalTo(@120);
        make.height.equalTo(@20);
    }];
    
    
    [self.contentView addSubview:self.commentLabel];
    [self.commentLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(@(-15));
        make.top.equalTo(self.timeLable.mas_bottom).offset(2);
        make.left.equalTo(@(15));
    }];
    
    [self.contentView addSubview:self.collectionview];
    [self.collectionview mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.commentLabel.mas_bottom).offset(5);
        make.left.right.equalTo(@0);
        make.bottom.equalTo(@(-10));
    }];
    [self.contentView addSubview:self.lineLabel];
    [self.lineLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@15);
        make.right.equalTo(@(-15));
        make.bottom.equalTo(@(-0.5));
        make.height.equalTo(@0.5);
    }];
    

    
}


#pragma mark - UICollectionViewDataSource
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.item.evaluationInfo.image.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    ESImageCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"ESImageCollectionViewCell" forIndexPath:indexPath];
    cell.imageUrl = [self.item.evaluationInfo.image objectAtIndex:indexPath.item];
    return cell;
}

#pragma mark - UICollectionViewDelegateFlowLayout

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    CGFloat imageWH = self.item.imageFrame.size.height;
    return CGSizeMake(imageWH, imageWH);
}

-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0, 5, 0, 5);
}

#pragma mark - UICollectionViewDelegate
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    [self createNWPhoto];
    
    
    
    //[ImagesSkimView showImages:self.item.evaluationInfo.image atIndex:indexPath.item];
}
-(NSMutableArray *)photos{
    if (_photos==nil) {
        _photos=[[NSMutableArray alloc]init];
    }
    return _photos;
}
-(void)createNWPhoto{
    NSMutableArray *photos = [[NSMutableArray alloc] init];
    //MWPhoto *photo;
    for (NSString*str in self.item.evaluationInfo.image ) {
         [photos addObject:[MWPhoto photoWithURL:[NSURL URLWithString:str]]];
    }
    self.photos=photos;
    
    BOOL displayActionButton = NO;
    //打勾的Button
    BOOL displaySelectionButtons = NO;
    //显示的是下面的tabbar
    BOOL displayNavArrows = NO;
    BOOL enableGrid = NO;
    BOOL startOnGrid = NO;
    BOOL autoPlayOnAppear = YES;
    MWPhotoBrowser *browser = [[MWPhotoBrowser alloc] initWithDelegate:self];
    //显示的是分享的按钮
    browser.displayActionButton = displayActionButton;
    //显示的是最下面的tabbar
    browser.displayNavArrows = displayNavArrows;
    //显示的是打勾的按钮
    browser.displaySelectionButtons = displaySelectionButtons;
    //显示的是上面的导航栏
    browser.alwaysShowControls = YES;
    //yes 显示的是分享按钮
    browser.zoomPhotosToFill = NO;
    browser.enableGrid = enableGrid;
    browser.startOnGrid = startOnGrid;
    browser.enableSwipeToDismiss = NO;
    browser.autoPlayOnAppear = autoPlayOnAppear;
    [browser setCurrentPhotoIndex:0];
    UINavigationController *nac = [[UINavigationController alloc]initWithRootViewController:browser];
    [[AppDelegate shared]presentViewController:nac animated:YES completion:nil];
    
}
#pragma mark - MWPhotoBrowserDelegate

- (NSUInteger)numberOfPhotosInPhotoBrowser:(MWPhotoBrowser *)photoBrowser {
    return self.item.evaluationInfo.image.count;
}

- (id <MWPhoto>)photoBrowser:(MWPhotoBrowser *)photoBrowser photoAtIndex:(NSUInteger)index {
    if (index < self.photos.count)
        return [self.photos objectAtIndex:index];
    return nil;
}

@end
