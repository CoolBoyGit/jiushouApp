//
//  ESPayListController.m
//  EasyShop
//
//  Created by 脉融LCJ on 16/5/4.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESPayListController.h"
#import "ESPayTool.h"
#import "ESIndicator.h"
#import "ESMyOrderPageController.h"
#import "ESPayViewCell.h"
#import "AllInPayData.h"
#import "APay.h"

@interface ESPayListController()<UITableViewDataSource,UITableViewDelegate,APayDelegate>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, assign) int    selectIndex;

/** indicator */
@property (nonatomic,strong) ESIndicator *indicator;

@end

@implementation ESPayListController

- (ESIndicator *)indicator
{
    if (!_indicator) {
        _indicator = [ESIndicator indicatorToView:self.view];
    }
    return _indicator;
}

- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        _tableView.delegate = self;
        _tableView.scrollEnabled = NO;
        _tableView.tableFooterView = [[UIView alloc] init];
        [_tableView registerClass:[ESPayViewCell class] forCellReuseIdentifier:@"ESPayViewCell"];
    }
    return _tableView;
}

#pragma mark - LifeCycle
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self addNotification];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.title = @"支付订单";
//    [self initalizedCumstomNav];
    [self.view addSubview:self.tableView];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(@0);
        make.top.equalTo(@0);
        make.height.equalTo(@400);
    }];
    
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake(10, 10, 60, 60);
    [button setTitle:@"确认支付" forState:UIControlStateNormal];
    [button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    button.layer.cornerRadius=5;
    button.layer.masksToBounds=YES;
    button.backgroundColor = [UIColor redColor];
    [button addTarget:self action:@selector(btnClick) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:button];
    [button mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@60);
        make.right.equalTo(@-60);
        make.bottom.equalTo(@(-60));
        make.height.equalTo(@(49));
    }];
}


- (void)dealloc
{
    [self removeNotification];
}

#pragma mark - Notification
- (void)addNotification
{
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(didPaySuccessAction) name:kDidPaySuccessNotification object:nil];
}
- (void)removeNotification
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

//支付成功返回
- (void)didPaySuccessAction
{
    [[NSNotificationCenter defaultCenter] postNotificationName:kReloadOrderListNotification object:nil];
    
    //返回订单列表页面，（如果是从订单详情页面进入，从堆栈中跳过详情页面）
    for (UIViewController *viewController  in self.navigationController.viewControllers) {
        if ([viewController isKindOfClass:[ESMyOrderPageController class]]) {
            [self.navigationController popToViewController:viewController animated:YES];
        }
    }
//    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark
#pragma mark - tableview代理方法;
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 2) {
        return 4;
    }
    return 1;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 10;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if(indexPath.section == 2){
        return 44;
    }
    return 46.5;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell0"];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell0"];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
        }
        cell.textLabel.text = @"订单金额";
        cell.textLabel.font = [UIFont systemFontOfSize:13];
        cell.detailTextLabel.text = [NSString stringWithFormat:@"¥%@",self.total_fee];
        cell.detailTextLabel.textColor = [UIColor redColor];
        return cell;
    } else if (indexPath.section == 1) {
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell1"];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell1"];
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
        }
        cell.textLabel.text = @"使用优惠券";
        cell.textLabel.font = [UIFont systemFontOfSize:13];
        return cell;
    } else if (indexPath.section == 2) {
                if (indexPath.row == 0) {
                    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell2"];
                    if (cell == nil) {
                        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell2"];
                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                    }

            cell.textLabel.text = @"选择支付方式";
            cell.textLabel.font = [UIFont systemFontOfSize:13];
                    return cell;
        }
        //这里要改写
        else if (indexPath.row == 1) {
            ESPayViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"ESPayViewCell"];
            cell.titleStr=@"支付宝";
            cell.imageStr=@"zalipay";
            cell.selectedBlock=^(){
                
                self.selectIndex= 1;
                [self.tableView reloadData];
            };
            if (self.selectIndex==indexPath.row) {
                cell.select=YES;
            }else{
                cell.select=NO;
            }
            return cell;


        }
        else if(indexPath.row==2){
            ESPayViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"ESPayViewCell"];
            cell.titleStr=@"微信";
            cell.imageStr=@"weixin";
            cell.selectedBlock=^(){
                self.selectIndex= 2;
                [self.tableView reloadData];
            };
            if (self.selectIndex==indexPath.row) {
                cell.select=YES;
            }else{
                cell.select=NO;
            }
            return cell;
            
        }
        
   
        else if(indexPath.row==3){
        ESPayViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"ESPayViewCell"];
        cell.titleStr=@"通联支付";
        cell.imageStr=@"tl";
        cell.selectedBlock=^(){
            self.selectIndex= 3;
            [self.tableView reloadData];
        };
        if (self.selectIndex==indexPath.row) {
            cell.select=YES;
        }else{
            cell.select=NO;
        }
        return cell;
        }
    }
    return nil;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    if (indexPath.section == 2 && indexPath.row > 0) {
        self.selectIndex = (int)indexPath.row;
        [self.tableView reloadData];
    }
}
-(void)btnClick
{
    if (self.selectIndex == 1) {
        [self fetchPayMsgWithType:ESPayType_Ali];
    }else if(self.selectIndex==2){
        [self fetchPayMsgWithType:ESPayType_Weixin];
    }else{
        [self fetchPayMsgWithType:ESPayType_AllIn];
    }
    
    //    [self.navigationController popToRootViewControllerAnimated:YES];
}


/**
 *  处理通联支付
 */
- (void)handleAllInPay
{
    AllInPayData *allInPay  = [[AllInPayData alloc] init];
    allInPay.orderNo        = self.order_id;
    allInPay.orderAmount    = [NSString stringWithFormat:@"%0.f",self.total_fee.doubleValue*100];//按分作为单位
    allInPay.productName    = @"测试商品1";
//    allInPay.ext1           = @"<USER>201410131001556</USER>";//暂时不传
    
    //@param mode
    //00 生产环境
    //01 测试环境
    
    //在测试与生产环境之间切换的时候请注意修改mode参数
    
    [APay startPay:allInPay.payData viewController:self delegate:self mode:@"01"];
    
}

#pragma mark - APayDelegate
- (void)APayResult:(NSString *)result {
    
    NSLog(@"%@", result);
    NSArray *parts = [result componentsSeparatedByString:@"="];
    NSError *error;
    NSData *data = [[parts lastObject] dataUsingEncoding:NSUTF8StringEncoding];
    NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:&error];
    NSInteger payResult = [dic[@"payResult"] integerValue];
    NSString *format_string = @"支付结果::支付%@";
    if (payResult == APayResultSuccess) {
        NSLog(format_string,@"成功");
        [ESToast showSuccess:@"支付成功！"];
        [self didPaySuccessAction];
    } else if (payResult == APayResultFail) {
        NSLog(format_string,@"失败");
        [ESToast showSuccess:@"支付成功！"];
    } else if (payResult == APayResultCancel) {
        NSLog(format_string,@"取消");
        [ESToast showSuccess:@"支付取消！"];
    }
}


#pragma mark - Networking
- (void)fetchPayMsgWithType:(ESPayType)type
{
    GetPayMsgRequest *request = [GetPayMsgRequest request];
    request.order_id = self.order_id;
    switch (type) {
        case ESPayType_Weixin:
        {
            request.channel = @2;
            [self handleWeixinPayWithRequest:request];
        }
            break;
        case ESPayType_Ali:
        {
            request.channel = @1;
            [self handleAliPayWithReqeust:request];
        }
            break;
        case ESPayType_AllIn:
        {
            request.channel = @3;
            [self handleAllInPayWithReqeust:request];
        }
            break;
    }

}

- (void)handleWeixinPayWithRequest:(GetPayMsgRequest *)request
{
    @weakify(self);
    [self.indicator startAnimation];
    [ESService getWeixinPayMsgRequest:request success:^(WeixinPayInfo *response) {
       @strongify(self);
        [self endGSNetworking];
        
        [[ESPayTool payTool] handleWexinPayWithInfo:response];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

- (void)handleAliPayWithReqeust:(GetPayMsgRequest *)request
{
    @weakify(self);
    [self.indicator startAnimation];
    [ESService getAliPayMsgRequest:request success:^(NSString *response) {
        @strongify(self);
        [self endGSNetworking];
        
        [[ESPayTool payTool] handleAliPayWithOrder:response];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

- (void)handleAllInPayWithReqeust:(GetPayMsgRequest *)request
{
    @weakify(self);
    [self.indicator startAnimation];
    [ESService getAllInPayMsgRequest:request success:^(NSString *response) {
        @strongify(self);
        [self endGSNetworking];
        
        //调起通联支付控件
        
        //@param mode
        //00 生产环境
        //01 测试环境
        
        //在测试与生产环境之间切换的时候请注意修改mode参数
        [APay startPay:response viewController:self delegate:self mode:@"01"];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.indicator stopAnimation];
}

@end
