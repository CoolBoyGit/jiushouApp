
//
//  ESHomeShopDetailController.m
//  EasyShop
//
//  Created by 脉融iOS开发 on 16/3/27.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESHomeShopDetailController.h"
#import <AVFoundation/AVFoundation.h>
#import "ESCommentCell.h"
#import "ESShopDetailCell.h"
#import "ESShopInfoCell.h"
#import "ESShopPriceCell.h"
#import "ESProductImageViewCell.h"
#import "ESShopDetailHeaderTitleView.h"
#import "ESShopCartViewController.h"
#import "ESRecommendShopListCell.h"
#import "ESFunctionView.h"
#import "ESWebSocket.h"
#import "ESIndicator.h"
#import "ICAlert.h"
#import "ShareTool.h"
//#import "HomeTitleView.h"
#import "ESShopDetailView.h"
#import "ICShareInfoView.h"
#import "ESChatViewController.h"
#import "EaseMob.h"
#import "ICShareInfoView.h"

#import "ESCommentCell.h"
#import "ESShopCommentCell.h"
#import "ESShopCommentController.h"
#import "ESLoginViewController.h"
#import "WarningControlView.h"

#import "MJRefresh.h"
#import "MJRefreshComponent.h"
@interface ESHomeShopDetailController ()<UITableViewDataSource,UITableViewDelegate,ICAlertDelegate,ESFunctionViewDelegate,UIWebViewDelegate>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) ESFunctionView *bottonView;

/** ESWebSocket */
@property (nonatomic,strong) ESWebSocket *webSocket;

/** 商品详情 */
@property (nonatomic,strong) GoodsDetailInfo *goodsDetailInfo;

/** 评价信息  (item : GoodEvaluationItem ) */
@property (nonatomic,strong) NSArray *evaluationItems;
/** 推荐商品 */
@property (nonatomic,strong) NSArray *relatedItems;

/** indicator */
@property (nonatomic,strong) ESIndicator *indicator;
@property (nonatomic,assign) BOOL select;
/*用来显示websocke的消息*/
@property (nonatomic,strong) UIView*bgView;
@property (nonatomic,strong) UILabel*titleLabel;
@property (nonatomic,strong) UIImageView*imageView;
//@property (nonatomic, strong) UIScrollView *scrollview;
@property (nonatomic, strong) ESShopDetailView *webView;
//@property (strong, nonatomic) HomeTitleView     *titleView;
@property (nonatomic,strong) AVPlayer* player;
@property (nonatomic,strong) UIImageView *moveImageView;
@property (nonatomic,strong) NSDate *firstDate;
@property (nonatomic,strong) NSDate *secondDate;
@property (nonatomic,assign) int flag;//用来做加入购物车的标志
@property (nonatomic,strong) UIView *tipsBgView;
@property (nonatomic,strong) UILabel *tipsLabel;
@property (nonatomic, strong) UILabel *countLabel; //
@property (nonatomic ,strong) UIView*tableFooterView;
@property (nonatomic,strong)  UIWebView*webview;
@end

@implementation ESHomeShopDetailController

#pragma mark - LifeCycle
- (void)viewDidLoad {
    [super viewDidLoad];
    //self.edgesForExtendedLayout = UIRectEdgeNone;
    self.flag=1;
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"商品详情";
    self.navigationController.navigationBar.translucent = NO;
    
    [self addNotification];
    UIButton*rightButton=[[UIButton alloc]initWithFrame:CGRectMake(0, 0, 22, 22)];
    [rightButton addTarget:self action:@selector(shopDeatilToshare) forControlEvents:UIControlEventTouchUpInside];
    [rightButton setImage:[UIImage imageNamed:@"share"] forState:UIControlStateNormal];
    UIBarButtonItem*buttonItem=[[UIBarButtonItem alloc]initWithCustomView:rightButton];
    self.navigationItem.rightBarButtonItem=buttonItem;
    [self.view addSubview:self.scrollView];
    
    [self.scrollView addSubview:self.tableView];
    [self.scrollView addSubview:self.webview];
    
    @weakify(self);
    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        @strongify(self);
        [self fetchGoodsDetail];
        [self fetchGoodsEvaluation];
        [self fetchRelatedGoods];
    }];
    MJRefreshAutoNormalFooter*footer=[MJRefreshAutoNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadWbeView)];
    self.tableView.mj_footer =footer;
    footer.stateLabel.backgroundColor=[UIColor colorWithWhite:0.902 alpha:1.000];
    [footer setTitle:@"继续拖动,查看图文详情" forState:MJRefreshStateIdle];
    [footer setTitle:@"继续拖动,查看图文详情" forState:MJRefreshStateRefreshing];
    [footer setTitle:@"继续拖动,查看图文详情" forState:MJRefreshStateNoMoreData];
    footer.automaticallyRefresh=NO;
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(goToDeatail)];
    header.lastUpdatedTimeLabel.hidden=YES;
    [header setTitle:@"下拉,返回宝贝详情" forState:MJRefreshStateIdle];
    [header setTitle:@"释放,返回宝贝详情" forState:MJRefreshStatePulling];
    [header setTitle:@"" forState:MJRefreshStateRefreshing];
    self.webview.scrollView.mj_header =header;
    [self.bgView addSubview:self.imageView];
    [self.imageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@3);
        make.top.equalTo(@3);
        make.height.equalTo(@30);
        make.width.equalTo(@30);
    }];
    [self.tipsBgView addSubview:self.tipsLabel];
    [self.bgView addSubview:self.titleLabel];
    [self.titleLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.imageView.mas_right).offset(5);
        make.width.equalTo(@195);
        make.height.equalTo(@20);
        make.top.equalTo(@(8));
        
    }];
    
    
    
    
    self.bottonView.backgroundColor = [UIColor whiteColor];
    
    [self.view addSubview:self.bottonView];
    
    [self.bottonView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.bottom.equalTo(@0);
        make.height.equalTo(@44);
    }];
    
    
    
    
    [self fetchGoodsDetail];
    [self fetchGoodsEvaluation];
    [self fetchRelatedGoods];
    
    [self.webSocket connect];
}
-(void)goToDeatail{
    [self.scrollView setContentOffset:CGPointMake(0, 0) animated:YES];
    //结束加载
    self.scrollView.scrollEnabled=NO;
    [self.webview.scrollView.mj_header endRefreshing];
}
-(void)loadWbeView{
    
    [UIView animateWithDuration:0.1 delay:0.0 options:UIViewAnimationOptionLayoutSubviews animations:^{
                        [self.scrollView setContentOffset:CGPointMake(0, ScreenHeight-64) animated:YES];
                    } completion:^(BOOL finished) {
                        //结束加载
                        self.scrollView.scrollEnabled=NO;
                        [self.tableView.mj_footer endRefreshing];
                    }];

}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    //     self.navigationController.navigationBar.hidden = YES;
}

-(UIWebView *)webview{
    if (_webview==nil) {
        _webview=[[UIWebView alloc]initWithFrame:CGRectMake(0, ScreenHeight-64, ScreenWidth, ScreenHeight-64-44)];
    }
    return _webview;
}
-(UIImageView *)moveImageView{
    if (_moveImageView==nil) {
        _moveImageView=[[UIImageView alloc]init];
        _moveImageView.layer.cornerRadius=20;
        _moveImageView.layer.masksToBounds=YES;
        _moveImageView.backgroundColor=[UIColor yellowColor];
    }
    return _moveImageView;
    
    
}
-(void)scrollViewDidScroll:(UIScrollView *)scrollView{
    
    if (scrollView==self.tableView) {
        NSLog(@"tableview.offset%f",scrollView.contentOffset.y);
    }else{
        if (scrollView.contentOffset.y>20) {
            // [self.scrollView setContentOffset:CGPointMake(0, 460) animated:YES];
        }
        NSLog(@"scrollView%f",scrollView.contentOffset.y);
    }
    
}
-(UIView *)tableFooterView{
    if (_tableFooterView==nil) {
        _tableFooterView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, 30)];
        _tableFooterView.backgroundColor=[UIColor colorWithRed:0.502 green:0.251 blue:0.000 alpha:1.000];
        UILabel*label=[[UILabel alloc]init];
        label.frame=CGRectMake(0, 0, 0, 0);
        label.text=@"继续拖动,查看图文详情";
        label.textAlignment=NSTextAlignmentCenter;
        label.font=[UIFont systemFontOfSize:15];
        
        [_tableFooterView addSubview:label];
        [label mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(@5);
            make.left.right.equalTo(@0);
            make.height.equalTo(@20);
        }];
        
    }
    return _tableFooterView;
}
- (ESIndicator *)indicator
{
    if (!_indicator) {
        _indicator = [ESIndicator indicatorToView:self.view];
    }
    return _indicator;
}

- (UIScrollView *)scrollView
{
    if (_scrollView == nil) {
        _scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight-64-44)];
        _scrollView.backgroundColor=[UIColor whiteColor];
        _scrollView.showsVerticalScrollIndicator=NO;
        _scrollView.delegate = self;
        _scrollView.pagingEnabled = YES;
        _scrollView.scrollEnabled=NO;
        _scrollView.bounces = NO;
        _scrollView.contentSize = CGSizeMake(ScreenWidth, (ScreenHeight-64-44)*2-44);
    }
    return _scrollView;
}

- (ESShopDetailView *)webView
{
    if(_webView == nil)
    {
        
        _webview.delegate=self;
        _webView = [[ESShopDetailView alloc] initWithFrame:CGRectMake(0, ScreenHeight, ScreenWidth, ScreenHeight)];
    }
    return _webView;
}

- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight-64-44) style:UITableViewStylePlain];
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.delegate = self;
        _tableView.tableFooterView = [[UIView alloc] init];
       // _tableView.tableFooterView=self.tableFooterView;
        
        _tableView.showsVerticalScrollIndicator=YES;
        //评论
        [_tableView registerClass:[ESCommentCell class] forCellReuseIdentifier:@"ESCommentCell"];
        //商品bannar
        [_tableView registerClass:[ESProductImageViewCell class] forCellReuseIdentifier:@"ESProductImageViewCell"];
        //推荐商品
        [_tableView registerClass:[ESRecommendShopListCell class] forCellReuseIdentifier:@"ESRecommendShopListCell"];
        //商品详情 网页
        [_tableView registerClass:[ESShopDetailCell class] forCellReuseIdentifier:@"ESShopDetailCell"];
        [_tableView registerClass:[ESShopInfoCell class] forCellReuseIdentifier:@"ESShopInfoCell"];
        [_tableView registerClass:[ESShopPriceCell class] forCellReuseIdentifier:@"ESShopPriceCell"];
        [_tableView registerClass:[ESShopCommentCell class] forCellReuseIdentifier:@"ESShopCommentCell"];
        
    }
    return _tableView;
}

-(UIView *)tipsBgView{
    if (_tipsBgView==nil) {
        NSString*str=@"客官,请慢点.......";
        CGFloat wiht=  [str widthOfFont:[UIFont systemFontOfSize:13]];
        _tipsBgView=[[UIView alloc]initWithFrame:CGRectMake((ScreenWidth-wiht)/2.0-25, self.view.centerY-50, wiht+50, 30)];
        _tipsBgView.layer.cornerRadius=5;
        _tipsBgView.layer.masksToBounds=YES;
        _tipsBgView.backgroundColor=[UIColor grayColor];
        _tipsBgView.alpha=0.9;
    }
    return _tipsBgView;
}
-(UILabel *)tipsLabel{
    if (_tipsLabel==nil) {
        NSString*str=@"客官,请慢点.......";
        CGFloat wiht=  [str widthOfFont:[UIFont systemFontOfSize:13]];
        _tipsLabel=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, wiht+20, 30)];
        _tipsLabel.center=self.tipsBgView.center;
        _tipsLabel.text=@"客官,请慢点.......";
        _tipsLabel.backgroundColor=[UIColor clearColor];
        _tipsLabel.textAlignment=NSTextAlignmentCenter;
        
    }return _tipsLabel;
}
-(UIView *)bgView{
    if (_bgView==nil) {
        _bgView=[[UIView alloc]initWithFrame:CGRectMake(30, 10, 223, 36)];
        _bgView.layer.cornerRadius=17;
        _bgView.layer.masksToBounds=YES;
        _bgView.backgroundColor=[UIColor grayColor];
        _bgView.alpha=0.9;
    }
    return _bgView;
}
-(UILabel *)titleLabel{
    if (_titleLabel==nil) {
        _titleLabel=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, 320, 20)];
        _titleLabel.font=[UIFont systemFontOfSize:10];
        _titleLabel.layer.cornerRadius=10;
        _titleLabel.layer.masksToBounds=YES;
        _titleLabel.textColor=[UIColor whiteColor];
        _titleLabel.backgroundColor=[UIColor clearColor];
        _titleLabel.textAlignment=NSTextAlignmentLeft;
    }
    return _titleLabel;
}
-(UIImageView *)imageView{
    if (_imageView==nil) {
        _imageView=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 0, 0)];
        _imageView.layer.cornerRadius=15;
        _imageView.layer.masksToBounds=YES;
    }
    return _imageView;
}
- (ESWebSocket *)webSocket
{
    if (!_webSocket) {
        _webSocket = [[ESWebSocket alloc] init];
        @weakify(self);
        _webSocket.receiveBroadcastOrder = ^(BroadcastOrderInfo *info){
            @strongify(self);
            [self.view addSubview:self.bgView];
            self.titleLabel.text=info.title;
            [self.imageView sd_setImageWithURL:[NSURL URLWithString:info.image] placeholderImage:nil];
            [UIView animateWithDuration:3.0 animations:^{
                self.bgView.alpha = 0.01;
            } completion:^(BOOL finished) {
                [self.bgView removeFromSuperview];
                self.bgView.alpha = 1.0;
            }];
            
        };
    }
    return _webSocket;
}
-(void)leftButtoonAction{
    [self.navigationController popViewControllerAnimated:YES];
}
- (void)shopDeatilToshare
{
    
    ICShareInfoView*view = [[ICShareInfoView alloc] initWithFrame:CGRectZero];;
    @weakify(self);
    [view setSelectShareButton:^(NSInteger index) {
        @strongify(self);
        [self ICAlertShareDidSelectIndex:index];
    }];
    [view showPopView];
}
#pragma mark 分享
- (void)ICAlertShareDidSelectIndex:(NSInteger)index

{
    NSString*url=@"http://www.jiushouguoji.hk/goods-detail-964.html";
    NSString*newUrl=[url stringByReplacingOccurrencesOfString:@"964" withString:self.goodsDetailInfo.gid];
    // 检测是否安装了微信
    
    if (index == 0) {//朋友圈
        [[ShareTool shareTool] shareWithType:ShareType_WexinTimeline
                                       title:self.goodsDetailInfo.name
                                         url:newUrl
                                       image:self.goodsDetailInfo.image];
    }else if (index == 1){//微信好友
        //http://www.jiushouguoji.com/goods-detail-964.html
        
        [[ShareTool shareTool] shareWithType:ShareType_WexinSession
                                       title:self.goodsDetailInfo.name
                                         url:newUrl
                                       image:self.goodsDetailInfo.image];
        
    }
    if(index==2){
        UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
        pasteboard.string = newUrl;
        [ESToast showMessage:@"成功复制"];
    }
    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillAppear:animated];
}



- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
    
    [self.webSocket close];
}



#pragma mark - UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 5;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 3) {
        return self.evaluationItems.count;
        
    }
    if (section == 5) {
        return 1;
    }
    return 1;
};

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0)
    {//是上面的banner
        ESProductImageViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESProductImageViewCell"];
        NSArray*array=[[NSMutableArray alloc]initWithArray:self.goodsDetailInfo.images];
        // NSLog(@"%d",array.count);
        NSMutableArray*imageArray=[[NSMutableArray alloc]initWithArray:array];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        if (self.goodsDetailInfo.images!=0) {
            
            [imageArray insertObject:[array objectAtIndex:array.count-1] atIndex:0];
            //            NSLog(@"%d",imageArray.count);
            [imageArray insertObject:[array objectAtIndex:0] atIndex:imageArray.count];
            //            //NSLog(@"%d",imageArray.count);
        }
        
        cell.imageItems =imageArray ;
        return cell;
    }
    if (indexPath.section == 1) {//商品原价
        ESShopPriceCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESShopPriceCell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.goodsInfo = self.goodsDetailInfo;
        return cell;
    }
    if (indexPath.section == 2) {//商品信息
        ESShopInfoCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESShopInfoCell"];
        //        cell.model = nil;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.goodsInfo = self.goodsDetailInfo;
        return cell;
    }
    if (indexPath.section == 3) {//商品评论
        ESShopCommentCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESShopCommentCell"];
        cell.item = [self.evaluationItems objectAtIndex:indexPath.row];
        
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
        
    }
    if (indexPath.section == 4) {//推荐商品
        ESRecommendShopListCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESRecommendShopListCell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.controller = self;
        cell.relatedItems  = self.relatedItems;
        return cell;
    }
    return nil;
}

#pragma mark - UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        return ScreenWidth;
    }
    if (indexPath.section == 2) {
        /*自动计算Label的高度*/
        
        CGRect rect=[self.goodsDetailInfo.name boundingRectWithSize:CGSizeMake(ScreenWidth-30, 100) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:15]} context:nil];
        
        return rect.size.height+60;
        
        
        
        
    }
    if (indexPath.section == 3) {
        GoodEvaluationItem *item =   [self.evaluationItems objectAtIndex:indexPath.row];
        //        GoodsEvaluationInfo*info=[self.evaluationItems objectAtIndex:indexPath.row];
        //        CGFloat contentH = [info.content boundingRectWithSize:CGSizeMake(ScreenWidth-30, CGFLOAT_MAX)
        //                                                                 options:NSStringDrawingUsesLineFragmentOrigin | NSStringDrawingUsesFontLeading
        //                                                              attributes:@{NSFontAttributeName : [UIFont systemFontOfSize:13]}
        //                                                                 context:nil].size.height;
        //
        return  item.cellHeight;
    }
    if (indexPath.section == 4) {
        return 240;
    }
    
    return 30;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if ( section == 3 || section == 4 ||section == 5) {
        return 30;
    } else
    {
        return 0;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    ESShopDetailHeaderTitleView *titleView = [[ESShopDetailHeaderTitleView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, 30)];
    if (section == 3) {
        titleView.model = @"评论";
        titleView.button.hidden = NO;
        @weakify(self);
        [titleView setCallBack:^{//评论页面
            @strongify(self);
            ESShopCommentController *vc = [[ESShopCommentController alloc] init];
            vc.goods_id         = self.goods_id;
            [self.navigationController pushViewController:vc animated:YES];
        }];
        [titleView setTapBlock:^{
            @strongify(self);
            ESShopCommentController *vc = [[ESShopCommentController alloc] init];
            vc.goods_id         = self.goods_id;
            [self.navigationController pushViewController:vc animated:YES];
            
        }];
    } else
    {
        titleView.button.hidden = YES;
        
        if (section == 4)
        {
            titleView.model = @"推荐商品";
        }else
        {
            titleView.model = @"商品详情";
        }
    }
    return titleView;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
}

#pragma mark
#pragma mark - lazy init
-(ESFunctionView *)bottonView
{
    if (!_bottonView) {
        _bottonView = [[ESFunctionView alloc] initWithFrame:CGRectMake(0, ScreenHeight-64-44, ScreenWidth, 44)];
        _bottonView.delegate = self;
    }
    return _bottonView;
}


#pragma mark
#pragma mark - 底部功能型代理方法;
-(void)functionViewAction:(int)index
{
    if (!kUserManager.isLogin){
        [WarningControlView showTitle:@"未登录" andMessage:@"确定去登录" andCancelBlock:^{
            
        } andsucessBlock:^{
            ESLoginViewController*vc=[[ESLoginViewController alloc]init];
            [self.navigationController pushViewController:vc animated:YES];
        }];
        
        
        //        UIAlertController*com=[UIAlertController alertControllerWithTitle:@"未登录" message:@"确定登录" preferredStyle:UIAlertControllerStyleAlert];
        //        UIAlertAction*cancelActio=[UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
        //
        //        }];
        //        UIAlertAction *okAction=[UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        //
        //
        //        }];
        //        [com addAction:cancelActio];
        //        [com addAction:okAction];
        //        [self presentViewController:com animated:YES completion:nil];
        
    }else{
        switch (index) {
            case 100://收藏
            {
                [self handleCollect];
            }
                break;
            case 101://购物车
            {
                ESShopCartViewController *cart = [[ESShopCartViewController alloc] init];
                cart.isHome=YES;
                [self.navigationController pushViewController:cart animated:YES];
            }
                break;
            case 102://论坛
                [self askService];
                //NSLog(@"论坛");
                break;
            case 103://加入购物车
            {
                
                //ESPlayer*pleyer=[[ESPlayer alloc]init];
                //[pleyer startOrendPlayer:YES];
                
                
                switch (self.goodsDetailInfo.goodsInfoType) {
                        
                    case GoodsInfoType_Sell:
                        [self addCart];
                        
                        break;
                    case GoodsInfoType_Remind:
                        [self addFavoritesWithType:FavoritesType_Remind];    break;
                    case GoodsInfoType_Wish:
                        [self addFavoritesWithType:FavoritesType_Wish];
                        break;
                }
            }
                break;
            default:
                break;
        }
        
    }
    
}


-(void)askService
{
    
    NSString*url=@"http://www.jiushouguoji.hk/goods-detail-964.html";
    NSString*newUrl=[url stringByReplacingOccurrencesOfString:@"964" withString:self.goodsDetailInfo.gid];
    
    NSDictionary *dic =  @{
                           @"msgtype":@{
                                   // 用户轨迹消息
                                   @"track":@{
                                           // 消息标题
                                           @"title": self.goodsDetailInfo.shop_name,
                                           // 商品价格
                                           @"price": [NSString stringWithFormat:@"¥%@",self.goodsDetailInfo.price],
                                           //                                               self.goodsDetailInfo.price,
                                           //                    @"¥: 235.00",
                                           // 商品描述
                                           @"desc":   self.goodsDetailInfo.shop_name,
                                           //                                                商品图片链接
                                           @"img_url": self.goodsDetailInfo.image,
                                           //                                                商品页面链接
                                           @"item_url": newUrl
                                           
                                           }
                                   }
                           };
    
    NSString *easeMob = @"JiuShouGuoJi2";
    [EaseSDKHelper sendTextMessage:@" "to:easeMob messageType:eMessageTypeChat requireEncryption:NO messageExt: dic];
    ESChatViewController * controller = [[ESChatViewController alloc] initWithConversationChatter:easeMob conversationType:eConversationTypeChat];
    //    ICUserModel *userModel = [ICUserDefaults standardUserDefaults].currentUser;
    //    ICChaterModel *chatModel = [[ICChaterModel alloc] init];
    //    chatModel.receiveName = model.username;
    //    chatModel.senderName = userModel.nickName;
    //    chatModel.senderImage = userModel.headImage;
    //    chatModel.avtorImage = model.avatar_url;
    //    controller.chaterModel = chatModel;
    controller.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:controller animated:NO];
}

#pragma mark - Networking

- (void)handleCollect
{
    if (self.goodsDetailInfo) {
        if (self.goodsDetailInfo.isCollect) {//已收藏
            [self cancleFavoritesWithType:FavoritesType_Collect];//取消收藏
            self.select=!self.select;
            self.bottonView.isSelect=self.select;
        }else{//未收藏，添加收藏
            [self addFavoritesWithType:FavoritesType_Collect];
            self.select=!self.select;
            self.bottonView.isSelect=self.select;
        }
    }
}

#pragma mark 添加收藏
- (void)addFavoritesWithType:(FavoritesType)type
{
    AddFavoritesGoodsRequest *request = [AddFavoritesGoodsRequest request];
    request.goods_id    = self.goods_id;
    request.type        = [NSNumber numberWithInt:type];
    
    @weakify(self);
    NSString *str = nil;
    switch (type) {
        case FavoritesType_Collect: str = @"收藏";    break;
        case FavoritesType_Wish:    str = @"心愿单";    break;
        case FavoritesType_Remind:  str = @"到货提醒";    break;
    }
    [self.indicator startAnimationWithMessage:[NSString stringWithFormat:@"正在添加%@...",str]];
    [ESService addFavoritesGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [ESToast showSuccess:[NSString stringWithFormat:@"添加%@成功！",str]];
        
        switch (type) {
            case FavoritesType_Collect: self.goodsDetailInfo.subscribe_collect = @"Y";    break;
            case FavoritesType_Wish: self.goodsDetailInfo.subscribe_wish = @"Y";    break;
            case FavoritesType_Remind: self.goodsDetailInfo.subscribe_arrival = @"Y";    break;
        }
        
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}
#pragma mark 取消收藏
- (void)cancleFavoritesWithType:(FavoritesType)type
{
    CancelFavoritesGoodsRequest *request = [CancelFavoritesGoodsRequest request];
    request.goods_id    = self.goods_id;
    request.type        = [NSNumber numberWithInt:type];
    
    @weakify(self);
    NSString *str = nil;
    switch (type) {
        case FavoritesType_Collect: str = @"收藏";    break;
        case FavoritesType_Wish:    str = @"心愿单";    break;
        case FavoritesType_Remind:  str = @"到货提醒";    break;
    }
    [self.indicator startAnimationWithMessage:[NSString stringWithFormat:@"正在取消%@...",str]];
    [ESService cancelFavoritesGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [ESToast showSuccess:[NSString stringWithFormat:@"取消%@成功！",str]];
        
        switch (type) {
            case FavoritesType_Collect: self.goodsDetailInfo.subscribe_collect = @"N";    break;
            case FavoritesType_Wish: self.goodsDetailInfo.subscribe_wish = @"N";    break;
            case FavoritesType_Remind: self.goodsDetailInfo.subscribe_arrival = @"N";    break;
        }
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

-(void)addNotification{
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(stopPlayer) name:kCartInfoUpdateNotification object:nil];
    
}
-(void)stopPlayer{
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0), ^{
        //sleep(1);
        
        //[self.player pause];
    });
    
    
}
#pragma mark 加入购物车
-(void)dealloc{
    [[NSNotificationCenter defaultCenter]removeObserver:self];
    
}
- (void)addCart
{
    
    if (self.goodsDetailInfo.stock.intValue==0) {
        TipViewAnimation*view=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"库存不足"];
        [view show];
        return;
    }
    self.secondDate=[NSDate date];
    NSTimeInterval time=[self.secondDate timeIntervalSinceDate:self.firstDate];
    if (self.flag==1) {
        [self addtocart];
    }else{
        if (time>=2) {
            self.moveImageView.hidden=NO;
            [self addtocart];
        }else{
            [UIView animateWithDuration:1.5 animations:^{
                [self.view addSubview:self.tipsBgView];
                self.tipsBgView.alpha=0.1;
            } completion:^(BOOL finished) {
                [self.tipsBgView removeFromSuperview];
                self.tipsBgView.alpha=1;
            }];
        }
    }
    
    
    
}
-(void)addtocart{
    
    AddCartGoodsRequest *request = [AddCartGoodsRequest request];
    request.goods_id = self.goods_id;
    request.n   = @1;
    [kKeyWindow addSubview:self.moveImageView];
    [self.moveImageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.height.equalTo(@40);
        make.width.equalTo(@40);
        make.right.equalTo(@(-90));
        make.top.equalTo(@160);
    }];
    NSString*string=[[NSBundle mainBundle]pathForResource:@"6124" ofType:@"mp3"];
    NSURL*fileUrl=[NSURL fileURLWithPath:string];
    AVPlayerItem*item=[AVPlayerItem playerItemWithURL:fileUrl];
    self.player=[[AVPlayer alloc]initWithPlayerItem:item];
    [self.player play];
    CAKeyframeAnimation*animation=[CAKeyframeAnimation animationWithKeyPath:@"position"];
    UIBezierPath*path=[UIBezierPath bezierPath];
    path.lineWidth=0.9;
    path.lineCapStyle=kCGLineCapRound;
    path.lineJoinStyle=kCGLineCapRound;
    [path moveToPoint:CGPointMake((ScreenWidth-105) , 175)];
    CGFloat h=ScreenHeight-60;
    [path addQuadCurveToPoint:CGPointMake(75,h) controlPoint:CGPointMake(80, 0)];
    animation.path=path.CGPath;
    
    animation.duration=1;
    animation.delegate=self;
    CABasicAnimation* rotationAnimation;
    rotationAnimation = [CABasicAnimation animationWithKeyPath:@"transform.rotation.z"];
    rotationAnimation.toValue = [NSNumber numberWithFloat: M_PI * 2.0 ];
    rotationAnimation.duration = 0.3;
    rotationAnimation.cumulative = YES;
    rotationAnimation.repeatCount = HUGE_VALF;
    [self.moveImageView.layer addAnimation:animation forKey:@"222"];
    [self.moveImageView .layer addAnimation:rotationAnimation forKey:@"234"];
    dispatch_async(dispatch_get_main_queue(), ^{
        sleep(1);
        
        [self.moveImageView removeFromSuperview];
    });
    @weakify(self);
    [ESService addCartGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        [ESToast showSuccess:@"加入购物车成功！"];
        
        NSString*flagStr=@"yes";
        dispatch_async(dispatch_get_main_queue(), ^{
            [[NSNotificationCenter defaultCenter] postNotificationName:kCartInfoUpdateNotification object:flagStr];
            
        });
        
        
        self.firstDate=[NSDate date];
        self.flag++;
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
    
    
}
/**动画的协议方法**/
-(void)animationDidStart:(CAAnimation *)anim{
    
}
-(void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag{
    
}
#pragma mark 请求商品信息
/**
 *  请求商品详情
 */
- (void)fetchGoodsDetail
{
    GetGoodsDetailRequest *request = [GetGoodsDetailRequest request];
    request.goods_id = self.goods_id;
    @weakify(self);
    [self.indicator startAnimation];
    [ESService getGoodsDetailRequest:request success:^(GoodsDetailInfo *response) {
        @strongify(self);
        [self endGSNetworking];
        self.goodsDetailInfo = response;
        self.select=self.goodsDetailInfo.isCollect;
        [self.moveImageView sd_setImageWithURL:[NSURL URLWithString:self.goodsDetailInfo.image]];
        [self.tableView reloadData];
        [self.webview loadHTMLString:self.goodsDetailInfo.body baseURL:nil];
        self.webView.body = self.goodsDetailInfo.body;
        self.bottonView.goodsInfoType = response.goodsInfoType;
        self.bottonView.goodsDetail=self.goodsDetailInfo;
        //       self.bottonView.countLabel.text = self.goodsDetailInfo.cart_info.goods_sum.stringValue;
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
    
}

//- (void)scrollViewDidScroll:(UIScrollView *)scrollView
//{
//        CGFloat offsetY = scrollView.contentOffset.y+scrollView.contentInset.top;
//
//        CGFloat alpha = offsetY/64;
//
//        if (offsetY>=0) {
//            CGFloat alpha_a = MIN(alpha, 1);
//            NSLog(@"%lf",alpha);
//           self.titleView.backgroundColor = [[UIColor lightGrayColor] colorWithAlphaComponent:alpha_a];
//
//
//        }else{
//            self.titleView.backgroundColor = [UIColor clearColor];
//        }
//
//    NSLog(@"%lf",scrollView.contentOffset.y);
//}

/** 请求商品评价 */
- (void)fetchGoodsEvaluation
{
    GetGoodsEvaluationRequest *request = [GetGoodsEvaluationRequest request];
    request.goods_id = self.goods_id;
    request.page = @1;
    request.n   = @3;
    
    @weakify(self);
    [ESService getGoodsEvaluationRequest:request success:^(NSArray *response) {
        @strongify(self);
        
        NSMutableArray *mArr = [NSMutableArray array];
        for (GoodsEvaluationInfo *info in response) {
            [mArr addObject:[GoodEvaluationItem itemWithInfo:info]];
        }
        self.evaluationItems = [mArr copy];
        [self.tableView reloadData];
        
    } failure:^(NSError *error) {
        
    }];
    
}

/** 获取推荐商品 */
- (void)fetchRelatedGoods
{
    GetRelatedGoodsRequest *request = [GetRelatedGoodsRequest request];
    request.goods_id = self.goods_id;
    request.n        = @5;
    
    @weakify(self);
    [ESService getRelatedGoodsRequest:request success:^(NSArray *response) {
        @strongify(self);
        
        self.relatedItems = response;
        [self.tableView reloadData];
        self.webView.body = self.goodsDetailInfo.body;
        
        
    } failure:^(NSError *error) {
        
    }];
    
}
#pragma webview
-(void)webViewDidFinishLoad:(UIWebView *)webView{
    //[self.webview.scrollView.mj_header endRefreshing];
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.indicator stopAnimation];
    [self.tableView.mj_header endRefreshing];
}

@end
