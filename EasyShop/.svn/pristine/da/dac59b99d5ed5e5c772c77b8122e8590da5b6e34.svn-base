//
//  ESSearchController.m
//  EasyShop
//
//  Created by 脉融LCJ on 16/5/19.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESSearchController.h"
#import "ESSearchRecordCell.h"
#import "ESSearchView.h"
#import "ESSearchGoodsCell.h"
#import "ESHomeShopDetailController.h"

@interface ESSearchController ()<UITableViewDataSource,UITableViewDelegate>

/** 查询view */
@property (nonatomic,weak) ESSearchView *seaarchView;

@property (nonatomic, strong) UITableView *tableView;

/** 页码 */
@property (nonatomic,assign) NSInteger page;
/** 搜索商品item (item: GoodsInfo ) */
@property (nonatomic,strong) NSMutableArray *goodsItems;

@end

@implementation ESSearchController

- (NSMutableArray *)goodsItems
{
    if (!_goodsItems) {
        _goodsItems = [NSMutableArray array];
    }
    return _goodsItems;
}

#pragma mark - LifeCycle
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    ESSearchView *searchView =  [[ESSearchView alloc] initWithFrame:CGRectMake(0, 0, 320, 30)];
    @weakify(self);
    searchView.searchBlock      = ^{
      @strongify(self);
        [self handleSearch];
    };
    self.navigationItem.titleView = searchView;
    self.seaarchView = searchView;
    
    UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithTitle:@"查询" style:UIBarButtonItemStylePlain target:self action:@selector(rightAction)];
    self.navigationItem.rightBarButtonItem = rightBarItem;
    
    
    [self.view addSubview:self.tableView];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(@0);
    }];
    
    UIView *footView = [[UIView alloc] init];
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake((ScreenWidth-120)/2.0, 20, 120, 30);
    [button setTitle:@"清除搜索记录" forState:UIControlStateNormal];
    [button setTitleColor:[UIColor orangeColor] forState:UIControlStateNormal];
    button.layer.cornerRadius = 5;
    button.layer.masksToBounds = YES;
    button.layer.borderWidth = 1;
    button.layer.borderColor = [UIColor orangeColor].CGColor;
    button.titleLabel.font = [UIFont systemFontOfSize:15];
    [button addTarget:self action:@selector(btnClick) forControlEvents:UIControlEventTouchUpInside];
    [footView addSubview:button];
//    self.tableView.tableFooterView = footView;
}
-(void)btnClick
{}
-(void)rightAction
{
    [self handleSearch];
}

- (void)handleSearch
{
    if ([self.seaarchView.searchField.text isEqualToString:@""]) {
        [ESToast showError:@"请输入查询关键字！"];
        return;
    }
    
    [self refrshList];
}

#pragma mark - UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.goodsItems.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    ESSearchGoodsCell *cell = [tableView dequeueReusableCellWithIdentifier:kIDSearchGoodsCell forIndexPath:indexPath];
    cell.goodsInfo = [self.goodsItems objectAtIndex:indexPath.row];
    return cell;
}

#pragma mark - UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return kHeightSearchGoodsCell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    GoodsInfo *info = [self.goodsItems objectAtIndex:indexPath.row];
    ESHomeShopDetailController *detail = [[ESHomeShopDetailController alloc] init];
//    detail.isNavHidden = YES;
    detail.goods_id = info.gid;
    [self.navigationController pushViewController:detail animated:YES];
}

#pragma mark - lazy init
- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        _tableView.delegate = self;
        _tableView.tableFooterView = [[UIView alloc] init];
        [_tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:@"UITableViewCell"];
        [_tableView registerClass:[ESSearchRecordCell class] forCellReuseIdentifier:@"ESSearchRecordCell"];
        [_tableView registerClass:[ESSearchGoodsCell class] forCellReuseIdentifier:kIDSearchGoodsCell];
        @weakify(self);
        _tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
           @strongify(self);
            [self refrshList];
        }];
        _tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
            @strongify(self);
            [self moreList];
        }];
    }
    return _tableView;
}

#pragma mark - Networkinge
- (void)refrshList
{
    self.page = 1;
    [self searchGoods];
}
- (void)moreList
{
    self.page ++;
    [self searchGoods];
}
- (void)searchGoods
{
    if ([self.seaarchView.searchField.text isEqualToString:@""]) {
        [self endGSNetworking];
        return;
    }
    
    SearchRequest *request = [SearchRequest request];
    request.key = self.seaarchView.searchField.text;
    request.page = [NSNumber numberWithInteger:self.page];
    request.n    = @20;
    
    @weakify(self);
    [ESService searchRequest:request success:^(NSArray *response) {
        @strongify(self);
        [self endGSNetworking];
        
        self.tableView.mj_footer.hidden = response.count < 20;
        
        
        if (self.page == 1) {
            [self.goodsItems removeAllObjects];
        }
        
        [self.goodsItems addObjectsFromArray:response];
        [self.tableView reloadData];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.tableView.mj_header endRefreshing];
    [self.tableView.mj_footer endRefreshing];
}

@end
