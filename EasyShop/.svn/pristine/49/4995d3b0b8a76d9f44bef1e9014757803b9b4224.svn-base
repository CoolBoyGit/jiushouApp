//
//  ESRegisterController.m
//  EasyShop
//
//  Created by wcz on 16/4/4.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESRegisterController.h"
#import "ESInputTextField.h"
#import "ESThreeLoginView.h"
#import "ESBlindViewController.h"
#import "ESService.h"
#import "WXApi.h"
#import "ESSmsButton.h"
#import <TencentOpenAPI/TencentApiInterface.h>
#import <TencentOpenAPI/TencentOAuth.h>
#import <TencentOpenAPI/QQApiInterface.h>
#import "WarningControlView.h"

@interface ESRegisterController ()<UITextFieldDelegate,ESThreeLoginDelegate,TencentSessionDelegate>{
    
    TencentOAuth *_tencentOAuth;//腾讯授权
}

@property (nonatomic, strong) ESInputTextField *mobileNumTextField;
@property (nonatomic, strong) ESInputTextField *passWordTextField;
@property (nonatomic, strong) ESInputTextField *codeTextField;
@property (nonatomic, strong) ESInputTextField *passWordNextTextField;

/** indicator */
@property (nonatomic,strong) ESIndicator *indcator;
@property (nonatomic,strong) ESSmsButton *msButton;
@end

@implementation ESRegisterController

- (ESIndicator *)indcator
{
    if (!_indcator) {
        _indcator = [ESIndicator indicatorToView:self.view];
    }
    return _indcator;
}

- (ESInputTextField *)mobileNumTextField
{
    if (_mobileNumTextField ==nil) {
        _mobileNumTextField = [[ESInputTextField alloc] initWithImage:nil needChange:YES];
        _mobileNumTextField.delegate=self;
        _mobileNumTextField.keyboardType = UIKeyboardTypeNumberPad;
        _mobileNumTextField.clearButtonMode = UITextFieldViewModeWhileEditing;
        _mobileNumTextField.placeholder = @"手机号/账号";
    }
    return _mobileNumTextField;
}

- (ESInputTextField *)passWordTextField
{
    if (_passWordTextField ==nil) {
        _passWordTextField = [[ESInputTextField alloc] initWithImage:nil];
        _passWordTextField.keyboardType = UIKeyboardTypeDefault;
        _passWordTextField.clearButtonMode = UITextFieldViewModeWhileEditing;
        _passWordTextField.secureTextEntry = YES;
        _passWordTextField.placeholder = @"密码";
    }
    return _passWordTextField;
}

- (ESInputTextField *)passWordNextTextField
{
    if (_passWordNextTextField ==nil) {
        _passWordNextTextField = [[ESInputTextField alloc] initWithImage:nil];
        _passWordNextTextField.keyboardType = UIKeyboardTypeDefault;
        _passWordNextTextField.clearButtonMode = UITextFieldViewModeWhileEditing;
        _passWordNextTextField.secureTextEntry=YES;
        _passWordNextTextField.placeholder = @"请输入密码";
    }
    return _passWordNextTextField;
}


- (ESInputTextField *)codeTextField
{
    if (_codeTextField ==nil) {
        _codeTextField = [[ESInputTextField alloc] initWithImage:nil];
        _codeTextField.keyboardType = UIKeyboardTypeNumberPad;
        _codeTextField.clearButtonMode = UITextFieldViewModeWhileEditing;
        _codeTextField.placeholder = @"注册码";
    }
    return _codeTextField;
}


-(void)threeLoginAboutAction:(LoginType)type
{
    if (type == LoginType_WeChat) {//微信
       
            
            SendAuthReq *req    = [[SendAuthReq alloc] init];
            req.scope           = @"snsapi_userinfo";
            req.state           = @"123";
            [WXApi sendReq:req];
        
    
        
    } else {//QQ
        // 检测是否安装了QQ
                    _tencentOAuth       = [[TencentOAuth alloc] initWithAppId:kQQ_AppId andDelegate:self];
            NSArray *permission = @[kOPEN_PERMISSION_GET_INFO,
                                    kOPEN_PERMISSION_GET_USER_INFO,
                                    kOPEN_PERMISSION_GET_SIMPLE_USER_INFO];
            [_tencentOAuth authorize:permission];
            
            
        
        }

    
}



#pragma mark
#pragma mark  Other Action
-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
    [[[UIApplication sharedApplication] keyWindow] endEditing:YES];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationController.navigationBar.hidden=YES;
    [self initalizedView];
    [self addNotification];
}
-(void)dealloc{
    [self removeNotification];
}
-(void)exitKeyboard{
    [self.view endEditing:YES];
}
- (void)initalizedView
{
    UIScrollView *sv = [[UIScrollView alloc] init];
    sv.backgroundColor=[UIColor whiteColor];
    sv.userInteractionEnabled = YES;
    [self.view addSubview:sv];
    [sv mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(@0);
    }];
    UIView *backgroundView = [[UIView alloc] init];
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(exitKeyboard)];
    [backgroundView addGestureRecognizer:tap];
    backgroundView.backgroundColor=[UIColor whiteColor];
    
    [sv addSubview:backgroundView];
    [backgroundView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(sv);
        make.width.equalTo(sv);
    }];
    
    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [backButton setImage:[UIImage imageNamed:@"leftButton"] forState:UIControlStateNormal];
    [backButton addTarget:self action:@selector(backButtonAction) forControlEvents:UIControlEventTouchUpInside];
    [backgroundView addSubview:backButton];
    [backButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view.mas_left).with.offset(15);
        make.top.equalTo(self.view.mas_top).with.offset(30);
        make.width.mas_equalTo(@20);
        make.height.mas_equalTo(@20);
    }];
    
    UILabel *nameLabel = [[UILabel alloc] init];
    nameLabel.font = ADeanFONT15;
    nameLabel.text = @"注册平台帐号";
    nameLabel.textAlignment = NSTextAlignmentCenter;
    nameLabel.textColor = LoginComColor;
    [backgroundView addSubview:nameLabel];
    [nameLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.equalTo(@(0));
        //make.top.equalTo(@(ScreenHeight/6));
        make.top.equalTo(@60);
    }];
    
    [backgroundView addSubview:self.mobileNumTextField];
    [self.mobileNumTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@40);
        make.right.equalTo(@(-40));
        make.height.equalTo(@44);
        make.top.equalTo(nameLabel.mas_bottom).offset(40);
    }];
    ESSmsButton *getVerifyCodeButton = [ESSmsButton buttonWithType:UIButtonTypeCustom];
    //getVerifyCodeButton.backgroundColor = RGBA(255, 255, 255, .6);
    getVerifyCodeButton.layer.cornerRadius = 5;
    getVerifyCodeButton.layer.masksToBounds = YES;
    [getVerifyCodeButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [getVerifyCodeButton setTitle:@"获取验证码" forState:UIControlStateNormal];
    //    [getVerifyCodeButton addTarget:self action:@selector(getVerifyCodeAction) forControlEvents:UIControlEventTouchUpInside];
    getVerifyCodeButton.titleLabel.font = ADeanFONT12;
    [self.view addSubview:getVerifyCodeButton];
    self.msButton = getVerifyCodeButton;

    [backgroundView addSubview:getVerifyCodeButton];
    [getVerifyCodeButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(@(-40));
        make.width.equalTo(@(80));
        make.height.equalTo(@20);
        make.centerY.equalTo(self.mobileNumTextField.mas_centerY).offset(0);
    }];
    
    [backgroundView addSubview:self.codeTextField];
    [self.codeTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@40);
        make.right.equalTo(@(-40));
        make.height.equalTo(@44);
        make.top.equalTo(self.mobileNumTextField.mas_bottom).offset(15);
    }];
    
    [backgroundView addSubview:self.passWordTextField];
    [self.passWordTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@40);
        make.width.equalTo(@(ScreenWidth - 80));
        make.height.equalTo(@44);
        make.top.equalTo(self.codeTextField.mas_bottom).offset(15);
    }];
    
    [backgroundView addSubview:self.passWordNextTextField];
    [self.passWordNextTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@40);
        make.width.equalTo(@(ScreenWidth - 80));
        make.height.equalTo(@44);
        make.top.equalTo(self.passWordTextField.mas_bottom).offset(15);
    }];

    UIButton *registerButton = [UIButton buttonWithType:UIButtonTypeCustom];
    registerButton.backgroundColor = RGB(233, 40, 46);
    registerButton.layer.cornerRadius = 4;
    registerButton.layer.masksToBounds = YES;
    [registerButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [registerButton setTitle:@"注册" forState:UIControlStateNormal];
    //    registerButton.backgroundColor = [UIColor whiteColor];
    registerButton.titleLabel.font = ADeanFONT15;
    [registerButton addTarget:self action:@selector(registerAction) forControlEvents:UIControlEventTouchUpInside];
    [backgroundView addSubview:registerButton];
    [registerButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@(40));
        make.right.equalTo(@(-40));
        make.top.equalTo(self.passWordNextTextField.mas_bottom).offset(20);
        make.height.equalTo(@44);
    }];
    
    
    ESThreeLoginView *loginView = [[ESThreeLoginView alloc] initWithFrame:CGRectZero];
//    loginView.backgroundColor = [UIColor whiteColor];
    loginView.delegate = self;
    [backgroundView addSubview:loginView];
    [loginView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(registerButton.mas_bottom).offset(0);
        make.left.equalTo(@0);
        make.width.equalTo(@(ScreenWidth));
        make.height.equalTo(@(100));
    }];
    
    
    [backgroundView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(loginView.mas_bottom);
    }];
    
}
/**判断是不是手机号码**/
-(BOOL)isMobileNumberClassification:(NSString*)mobile{
    
    NSString * MOBIL = @"^\\d{11}$";//11位数字正则
    NSPredicate *regextestmobil = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", MOBIL];
    return [regextestmobil evaluateWithObject:mobile];
    
    /**
     * 手机号码
     * 移动：134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188,1705
     * 联通：130,131,132,152,155,156,185,186,1709
     * 电信：133,1349,153,180,189,1700
     */
    //    NSString * MOBILE = @"^1((3//d|5[0-35-9]|8[025-9])//d|70[059])//d{7}$";//总况
    
    /**
     10         * 中国移动：China Mobile
     11         * 134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188，1705
     12         */
    //NSString * CM = @"^1(34[0-8]|(3[5-9]|5[017-9]|8[278])//d|705)//d{7}$";
    NSString*CM = @"^1(3[4-9]|5[01789]|8[278])\\d{8,8}";
    /**
     
     15         * 中国联通：China Unicom
     16         * 130,131,132,152,155,156,185,186,1709
     17         */
    NSString * CU = @"^1((3[0-2]|5[256]|8[56])\\d|709)\\d{8}";
    /**
     20         * 中国电信：China Telecom
     21         * 133,1349,153,180,189,1700
     22         */
    NSString * CT = @"^1((33|53|8[09])\\d|349|700)\\d{8}";
    
    
    /**
     25         * 大陆地区固话及小灵通
     26         * 区号：010,020,021,022,023,024,025,027,028,029
     27         * 号码：七位或八位
     28         */
    // NSString * PHS = @"^0(10|2[0-5789]|\\d{3})\\d{7,8}";
    
    
    //    NSPredicate *regextestmobile = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", MOBILE];
    NSPredicate *regextestcm = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", CM];
    NSPredicate *regextestcu = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", CU];
    NSPredicate *regextestct = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", CT];
    // NSPredicate *regextestphs = [NSPredicate predicateWithFormat:@"SELF MATCHES %@",PHS];
    
    if (([regextestcm evaluateWithObject:mobile] == YES)
        || ([regextestct evaluateWithObject:mobile] == YES)
        || ([regextestcu evaluateWithObject:mobile] == YES)
        )
    {
        return YES;
    }
    else
    {
        return NO;
    }
}


- (void)backButtonAction
{
    self.navigationController.navigationBar.hidden = NO;
    [self.navigationController popViewControllerAnimated:YES];
}

/**
 *  获取验证码
 */
-(void)getVerifyCodeAction
{
    [self getVerifyCode];
}

/**
 *  注册
 */
- (void)registerAction
{
    [self doUserAdd];
}

#pragma mark - Networking
- (void)getVerifyCode
{
    GetSmsVerifyRequest *request = [GetSmsVerifyRequest request];
    request.mobile = self.mobileNumTextField.text;
    
    @weakify(self);
    [self.indcator startAnimationWithMessage:@"正在获取验证码"];
    [ESService getSmsVerifyRequest:request success:^{
        @strongify(self);
        [self endNetworking];
        [ESToast showSuccess:@"验证码获取成功！"];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endNetworking];
    }];
}
- (void)addNotification
{
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(textDidChange:) name:UITextFieldTextDidChangeNotification object:self.mobileNumTextField];
}
- (void)removeNotification
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

- (void)textDidChange:(NSNotification *)notification
{
    UITextField *textField = notification.object;
    if (textField == self.mobileNumTextField) {
        self.msButton.phone = textField.text;
    }
}
- (void)doUserAdd
{
    
    if ([self isMobileNumberClassification:self.mobileNumTextField.text]) {
        
    }else{
        TipViewAnimation*tipsView=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"请输入正确手机号码"];
        [tipsView show];
        return;
    }if (self.passWordTextField.text.length==0) {
        TipViewAnimation*tipsView=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"请输入密码"];
        [tipsView show];
        return;
        
    }if (self.passWordTextField.text.length<6) {
        TipViewAnimation*tipsView=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"密码不可以小于6位"];
        [tipsView show];
        return;
    }
    
    if ([self.passWordTextField.text isEqualToString:self.passWordNextTextField.text]) {
        
    }else{
        TipViewAnimation*tipsView=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"请确认密码"];
        [tipsView show];
        return;
    }

    UserAddRequest *request = [UserAddRequest request];
    request.username    = self.mobileNumTextField.text;
    request.password    = self.passWordTextField.text;
    request.verify      = self.codeTextField.text;
    
    @weakify(self);
    [self.indcator startAnimationWithMessage:@"正在注册..."];
    [ESService userAddRequest:request success:^(NSString *response) {
        @strongify(self);
        [self endNetworking];
        
        [ESToast showSuccess:@"注册成功！"];
        
        if (self.registerBlock) {
            self.registerBlock(request.username,request.password);
        }
        
        [self.navigationController popViewControllerAnimated:YES];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endNetworking];
    }];
}

#pragma mark endNetworking
- (void)endNetworking
{
    [self.indcator stopAnimation];
}

//- (void)threeLoginAboutAction:(LoginType)type
//{
//    
//}

@end
