//
//  ESHomeShopDetailController.m
//  EasyShop
//
//  Created by 脉融iOS开发 on 16/3/27.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESHomeShopDetailController.h"
#import "ESCommentCell.h"
#import "ESShopDetailCell.h"
#import "ESShopInfoCell.h"
#import "ESShopPriceCell.h"
#import "ESProductImageViewCell.h"
#import "ESShopDetailHeaderTitleView.h"
#import "ESShopCartViewController.h"
#import "ESRecommendShopListCell.h"
#import "ESFunctionView.h"
#import "ESWebSocket.h"
#import "ESIndicator.h"
#import "ICAlert.h"
#import "ShareTool.h"
//#import "HomeTitleView.h"
#import "ESShopDetailView.h"

@interface ESHomeShopDetailController ()<UITableViewDataSource,UITableViewDelegate,ICAlertDelegate,ESFunctionViewDelegate>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) ESFunctionView *bottonView;

/** ESWebSocket */
@property (nonatomic,strong) ESWebSocket *webSocket;

/** 商品详情 */
@property (nonatomic,strong) GoodsDetailInfo *goodsDetailInfo;

/** 评价信息 */
@property (nonatomic,strong) NSArray *evaluationItems;
/** 推荐商品 */
@property (nonatomic,strong) NSArray *relatedItems;

/** indicator */
@property (nonatomic,strong) ESIndicator *indicator;
/*用来显示websocke的消息*/
@property (nonatomic,strong) UIView*bgView;
@property (nonatomic,strong) UILabel*titleLabel;
@property (nonatomic,strong) UIImageView*imageView;
@property (nonatomic, strong) UIScrollView *scrollview;
@property (nonatomic, strong) ESShopDetailView *webView;
//@property (strong, nonatomic) HomeTitleView     *titleView;



@end

@implementation ESHomeShopDetailController

- (ESIndicator *)indicator
{
    if (!_indicator) {
        _indicator = [ESIndicator indicatorToView:self.view];
    }
    return _indicator;
}

- (UIScrollView *)scrollview
{
    if (_scrollview == nil) {
        _scrollview = [[UIScrollView alloc] initWithFrame:self.view.bounds];
        _scrollview.backgroundColor = [UIColor whiteColor];
        _scrollview.delegate = self;
        _scrollview.pagingEnabled = YES;
        _scrollview.bounces = NO;
        _scrollview.contentSize = CGSizeMake(ScreenWidth, (2*ScreenHeight)-88-64-64);
    }
    return _scrollview;
}

- (ESShopDetailView *)webView
{
    if(_webView == nil)
    {
       _webView = [[ESShopDetailView alloc] initWithFrame:CGRectMake(0, ScreenHeight, ScreenWidth, ScreenHeight)];
    }
    return _webView;
}

- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.delegate = self;
        _tableView.tableFooterView = [[UIView alloc] init];
        [_tableView registerClass:[ESCommentCell class] forCellReuseIdentifier:@"ESCommentCell"];
        [_tableView registerClass:[ESProductImageViewCell class] forCellReuseIdentifier:@"ESProductImageViewCell"];
        [_tableView registerClass:[ESRecommendShopListCell class] forCellReuseIdentifier:@"ESRecommendShopListCell"];
        [_tableView registerClass:[ESShopDetailCell class] forCellReuseIdentifier:@"ESShopDetailCell"];
        [_tableView registerClass:[ESShopInfoCell class] forCellReuseIdentifier:@"ESShopInfoCell"];
        [_tableView registerClass:[ESShopPriceCell class] forCellReuseIdentifier:@"ESShopPriceCell"];

    }
    return _tableView;
}


-(UIView *)bgView{
    if (_bgView==nil) {
        _bgView=[[UIView alloc]initWithFrame:CGRectMake(30, 10, 223, 36)];
        _bgView.layer.cornerRadius=17;
        _bgView.layer.masksToBounds=YES;
        _bgView.backgroundColor=[UIColor grayColor];
        _bgView.alpha=0.9;
    }
    return _bgView;
}
-(UILabel *)titleLabel{
    if (_titleLabel==nil) {
        _titleLabel=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, 320, 20)];
        _titleLabel.font=[UIFont systemFontOfSize:10];
        _titleLabel.layer.cornerRadius=10;
        _titleLabel.layer.masksToBounds=YES;
        _titleLabel.textColor=[UIColor whiteColor];
        _titleLabel.backgroundColor=[UIColor clearColor];
        _titleLabel.textAlignment=NSTextAlignmentLeft;
    }
    return _titleLabel;
}
-(UIImageView *)imageView{
    if (_imageView==nil) {
        _imageView=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 0, 0)];
        _imageView.layer.cornerRadius=15;
        _imageView.layer.masksToBounds=YES;
    }
    return _imageView;
}
- (ESWebSocket *)webSocket
{
    if (!_webSocket) {
        _webSocket = [[ESWebSocket alloc] init];
        @weakify(self);
        _webSocket.receiveBroadcastOrder = ^(BroadcastOrderInfo *info){
            @strongify(self);
            [self.view addSubview:self.bgView];
            self.titleLabel.text=info.title;
            [self.imageView sd_setImageWithURL:[NSURL URLWithString:info.image] placeholderImage:nil];
            [UIView animateWithDuration:3.0 animations:^{
                self.bgView.alpha = 0.01;
            } completion:^(BOOL finished) {
                [self.bgView removeFromSuperview];
                self.bgView.alpha = 1.0;
            }];
            
        };
    }
    return _webSocket;
}

#pragma mark - LifeCycle
- (void)viewDidLoad {
    [super viewDidLoad];
//    self.navigationController.navigationBar.translucent = YES;
    self.view.backgroundColor = [UIColor whiteColor];
    self.title = @"商品详情";
    self.navigationItem.rightBarButtonItem=[[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"share"] style:UIBarButtonItemStylePlain target:self action:@selector(shopDeatilToshare)];
    
    [self.view addSubview:self.scrollview];
    [self.scrollview mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(@0);
        make.bottom.equalTo(@(-44));
    }];
    
    
    [self.scrollview addSubview:self.tableView];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.top.equalTo(@0);
        make.width.equalTo(@(ScreenWidth));
        make.height.equalTo(@(ScreenHeight - 44-64));
    }];
    

    UILabel *titleLabel = [[UILabel alloc]init];
    titleLabel.text = @"商品详情";
    titleLabel.font = [UIFont systemFontOfSize:15];
    [self.scrollview addSubview:titleLabel];
    [titleLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@12);
        make.top.equalTo(self.tableView.mas_bottom).offset(0);
        make.height.equalTo(@30);
    }];
    
    
    [self.scrollview addSubview:self.webView];
    [self.webView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@0);
        make.top.equalTo(titleLabel.mas_bottom);
        make.width.equalTo(@(ScreenWidth));
        make.height.equalTo(@(ScreenHeight - 64 - 30 - 44));
    }];
    

    self.bottonView.backgroundColor = [UIColor redColor];
    
    [self.view addSubview:self.bottonView];
    
//    self.titleView = [[HomeTitleView alloc] initWithTile:@"商品详情" withBackRuturn:YES];;
//    self.titleView.delegate = self;
//    self.titleView.titleLabel.textColor = [UIColor whiteColor];
//    self.titleView.backgroundColor = [UIColor clearColor];
//    [self.view addSubview:self.titleView];
//    
//    self.titleView.userInteractionEnabled = YES;

    
    @weakify(self);
    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        @strongify(self);
        [self fetchGoodsDetail];
        [self fetchGoodsEvaluation];
        [self fetchRelatedGoods];
    }];
      [self.bgView addSubview:self.imageView];
    [self.imageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@3);
        make.top.equalTo(@3);
        make.height.equalTo(@30);
        make.width.equalTo(@30);
    }];
    [self.bgView addSubview:self.titleLabel];
    [self.titleLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.imageView.mas_right).offset(5);
        make.width.equalTo(@195);
        make.height.equalTo(@20);
        make.top.equalTo(@(8));
    
    }];
    [self fetchGoodsDetail];
    [self fetchGoodsEvaluation];
    [self fetchRelatedGoods];
    
    [self.webSocket connect];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
//     self.navigationController.navigationBar.hidden = YES;
}

- (void)shopDeatilToshare
{
    [[ICAlert alert]showShareViewDelegate:self];
}

- (void)ICAlertShareDidSelectIndex:(NSInteger)index

{
    NSString*url=@"http://www.jiushouguoji.com/goods-detail-964.html";
    NSString*newUrl=[url stringByReplacingOccurrencesOfString:@"964" withString:self.goodsDetailInfo.gid];
    NSLog(@"%@",newUrl);
   // NSLog(@"xx %d",index);
    if (index == 0) {//朋友圈
        [[ShareTool shareTool] shareWithType:ShareType_WexinTimeline
                                       title:self.goodsDetailInfo.name
                                         url:newUrl
                                       image:self.goodsDetailInfo.image];
    }else if (index == 1){//微信好友
        //http://www.jiushouguoji.com/goods-detail-964.html
        
        [[ShareTool shareTool] shareWithType:ShareType_WexinSession
                                       title:self.goodsDetailInfo.name
                                         url:newUrl
                                       image:self.goodsDetailInfo.image];
        
    }else if (index == 2){//微博
        
    }else if(index==3){
        
        
    }
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillAppear:animated];
}



- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
    
    [self.webSocket close];
}



#pragma mark - tableview代理方法;

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 5;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 3) {
        return self.evaluationItems.count;
    }
    if (section == 5) {
        return 1;
    }
    return 1;
};

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (section == 0) {
        return 5;
    }else if (section == 1 || section == 2 || section == 3 || section == 4) {
        return 10;
    }
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        return ScreenWidth;
    }
    if (indexPath.section == 2) {
        return 80;
    }
    if (indexPath.section == 3) {
            return 130;
    }
    if (indexPath.section == 4) {
        return 240;
    }
    
    return 30;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    ESShopDetailHeaderTitleView *titleView = [[ESShopDetailHeaderTitleView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, 30)];
    if (section == 3) {
        titleView.model = @"评论";
    } else
    {
        if (section == 4) {
            titleView.model = @"推荐商品";
        }else
        {
            titleView.model = @"商品详情";
        }
    }
    return titleView;
    
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if ( section == 3 || section == 4 ||section == 5) {
        return 30;
    } else
    {
        return 0;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0)
    {//是上面的banner
        ESProductImageViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESProductImageViewCell"];
        NSArray*array=[[NSMutableArray alloc]initWithArray:self.goodsDetailInfo.images];
       // NSLog(@"%d",array.count);
        NSMutableArray*imageArray=[[NSMutableArray alloc]initWithArray:array];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        if (self.goodsDetailInfo.images!=0) {
            
            [imageArray insertObject:[array objectAtIndex:array.count-1] atIndex:0];
//            NSLog(@"%d",imageArray.count);
            [imageArray insertObject:[array objectAtIndex:0] atIndex:imageArray.count];
//            //NSLog(@"%d",imageArray.count);
        }
        
        cell.imageItems =imageArray ;
        return cell;
    }
    if (indexPath.section == 1) {//商品原价
        ESShopPriceCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESShopPriceCell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.goodsInfo = self.goodsDetailInfo;
        return cell;
    }
    if (indexPath.section == 2) {//商品信息
        ESShopInfoCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESShopInfoCell"];
//        cell.model = nil;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.goodsInfo = self.goodsDetailInfo;
        return cell;
    }
    if (indexPath.section == 3) {//商品评论
           ESCommentCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESCommentCell"];
//            cell.model = nil;
        cell.evaluationInfo = [self.evaluationItems objectAtIndex:indexPath.row];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
           return cell;
    }
    if (indexPath.section == 4) {
        ESRecommendShopListCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESRecommendShopListCell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.controller = self;
        cell.relatedItems  = self.relatedItems;
        return cell;
    }
    return nil;
}



#pragma mark
#pragma mark - lazy init
-(ESFunctionView *)bottonView
{
    if (!_bottonView) {
        _bottonView = [[ESFunctionView alloc] initWithFrame:CGRectMake(0, ScreenHeight-44-64, ScreenWidth, 44)];
        _bottonView.delegate = self;
    }
    return _bottonView;
}


#pragma mark
#pragma mark - 底部功能型代理方法;
-(void)functionViewAction:(int)index
{
    ESLoginVerify
    
    switch (index) {
        case 100://收藏
        {
            [self handleCollect];
        }
            break;
        case 101://购物车
        {
            ESShopCartViewController *cart = [[ESShopCartViewController alloc] init];
            [self.navigationController pushViewController:cart animated:YES];
        }
            break;
        case 102://论坛
            NSLog(@"论坛");
            break;
        case 103://加入购物车
        {
            switch (self.goodsDetailInfo.goodsInfoType) {
                case GoodsInfoType_Sell:    [self addCart]; break;
                case GoodsInfoType_Remind:  [self addFavoritesWithType:FavoritesType_Remind];    break;
                case GoodsInfoType_Wish:    [self addFavoritesWithType:FavoritesType_Wish];  break;
            }
        }
            break;
        default:
            break;
    }
}

#pragma mark - Networking

- (void)handleCollect
{
    if (self.goodsDetailInfo) {
        if (self.goodsDetailInfo.isCollect) {//已收藏
            [self cancleFavoritesWithType:FavoritesType_Collect];//取消收藏
        }else{//未收藏，添加收藏
            [self addFavoritesWithType:FavoritesType_Collect];
        }
    }
}

#pragma mark 添加收藏
- (void)addFavoritesWithType:(FavoritesType)type
{
    AddFavoritesGoodsRequest *request = [AddFavoritesGoodsRequest request];
    request.goods_id    = self.goods_id;
    request.type        = [NSNumber numberWithInt:type];
    
    @weakify(self);
    NSString *str = nil;
    switch (type) {
        case FavoritesType_Collect: str = @"收藏";    break;
        case FavoritesType_Wish:    str = @"心愿单";    break;
        case FavoritesType_Remind:  str = @"到货提醒";    break;
    }
    [self.indicator startAnimationWithMessage:[NSString stringWithFormat:@"正在添加%@...",str]];
    [ESService addFavoritesGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [ESToast showSuccess:[NSString stringWithFormat:@"添加%@成功！",str]];
        
        switch (type) {
            case FavoritesType_Collect: self.goodsDetailInfo.subscribe_collect = @"Y";    break;
            case FavoritesType_Wish: self.goodsDetailInfo.subscribe_wish = @"Y";    break;
            case FavoritesType_Remind: self.goodsDetailInfo.subscribe_arrival = @"Y";    break;
        }
        
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}
#pragma mark 取消收藏
- (void)cancleFavoritesWithType:(FavoritesType)type
{
    CancelFavoritesGoodsRequest *request = [CancelFavoritesGoodsRequest request];
    request.goods_id    = self.goods_id;
    request.type        = [NSNumber numberWithInt:type];
    
    @weakify(self);
    NSString *str = nil;
    switch (type) {
        case FavoritesType_Collect: str = @"收藏";    break;
        case FavoritesType_Wish:    str = @"心愿单";    break;
        case FavoritesType_Remind:  str = @"到货提醒";    break;
    }
    [self.indicator startAnimationWithMessage:[NSString stringWithFormat:@"正在取消%@...",str]];
    [ESService cancelFavoritesGoodsRequest:request success:^{
       @strongify(self);
        [self endGSNetworking];
        
        [ESToast showSuccess:[NSString stringWithFormat:@"取消%@成功！",str]];
        
        switch (type) {
            case FavoritesType_Collect: self.goodsDetailInfo.subscribe_collect = @"N";    break;
            case FavoritesType_Wish: self.goodsDetailInfo.subscribe_wish = @"N";    break;
            case FavoritesType_Remind: self.goodsDetailInfo.subscribe_arrival = @"N";    break;
        }
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}


#pragma mark 加入购物车
- (void)addCart
{
    AddCartGoodsRequest *request = [AddCartGoodsRequest request];
    request.goods_id = self.goods_id;
    request.n   = @1;
    
    @weakify(self);
    [ESService addCartGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [[NSNotificationCenter defaultCenter] postNotificationName:kCartInfoUpdateNotification object:nil];
        
        [ESToast showSuccess:@"加入购物车成功！"];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}
#pragma mark 请求商品信息
/**
 *  请求商品详情
 */
- (void)fetchGoodsDetail
{
    GetGoodsDetailRequest *request = [GetGoodsDetailRequest request];
    request.goods_id = self.goods_id;
    @weakify(self);
    [self.indicator startAnimation];
    [ESService getGoodsDetailRequest:request success:^(GoodsDetailInfo *response) {
        @strongify(self);
        [self endGSNetworking];
        self.goodsDetailInfo = response;
        [self.tableView reloadData];
        self.webView.body = self.goodsDetailInfo.body;
        self.bottonView.goodsInfoType = response.goodsInfoType;
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
    
}

//- (void)scrollViewDidScroll:(UIScrollView *)scrollView
//{
//        CGFloat offsetY = scrollView.contentOffset.y+scrollView.contentInset.top;
//        
//        CGFloat alpha = offsetY/64;
//        
//        if (offsetY>=0) {
//            CGFloat alpha_a = MIN(alpha, 1);
//            NSLog(@"%lf",alpha);
//           self.titleView.backgroundColor = [[UIColor lightGrayColor] colorWithAlphaComponent:alpha_a];
//
//            
//        }else{
//            self.titleView.backgroundColor = [UIColor clearColor];
//        }
//    
//    NSLog(@"%lf",scrollView.contentOffset.y);
//}

/** 请求商品评价 */
- (void)fetchGoodsEvaluation
{
    GetGoodsEvaluationRequest *request = [GetGoodsEvaluationRequest request];
    request.goods_id = self.goods_id;
    request.page = @1;
    request.n   = @3;
    
    @weakify(self);
    [ESService getGoodsEvaluationRequest:request success:^(NSArray *response) {
        @strongify(self);
        
        self.evaluationItems = response;
        [self.tableView reloadData];
        
    } failure:^(NSError *error) {
        
    }];

}

/** 获取推荐商品 */
- (void)fetchRelatedGoods
{
    GetRelatedGoodsRequest *request = [GetRelatedGoodsRequest request];
    request.goods_id = self.goods_id;
    request.n        = @5;
    
    @weakify(self);
    [ESService getRelatedGoodsRequest:request success:^(NSArray *response) {
        @strongify(self);
        
        self.relatedItems = response;
        [self.tableView reloadData];
        self.webView.body = self.goodsDetailInfo.body;

        
    } failure:^(NSError *error) {
        
    }];
    
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.indicator stopAnimation];
    [self.tableView.mj_header endRefreshing];
}

@end
