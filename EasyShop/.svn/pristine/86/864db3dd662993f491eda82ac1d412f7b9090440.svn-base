//
//  ESNewAddressController.m
//  EasyShop
//
//  Created by 脉融LCJ on 16/5/11.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "ESNewAddressController.h"
#import "NewAddressCell.h"
#import "ESIndicator.h"
#import "ESDistrictPickerView.h"
#import "ESLocationManager.h"
@interface ESNewAddressController()<UITableViewDataSource,UITableViewDelegate>

@property (nonatomic, strong) UITableView *tableView;

/** 输入item */
@property (nonatomic,strong) NSArray *infoItems;

@property (nonatomic,strong) DistrictInfo *provinceInfo;
@property (nonatomic,strong) DistrictInfo *cityInfo;
@property (nonatomic,strong) DistrictInfo *areaInfo;
@property (nonatomic,copy) NSString*tipStr;
/** indicator */
@property (nonatomic,strong) ESIndicator *indicator;
@property (nonatomic,assign) CGFloat h;
@end


@implementation ESNewAddressController
-(NSString *)tipStr{
    if (_tipStr==nil) {
        _tipStr=@"海关需要对海外购物检查身份，请填写正确的身份证信息，身份证信息会加密报关，就手国际确保你的信息安全，请放心购买!";
    }
    return _tipStr;
}
- (ESIndicator *)indicator
{
    if (!_indicator) {
        _indicator = [ESIndicator indicatorToView:self.view];
    }
    return _indicator;
}

- (NSArray *)infoItems
{
    if (!_infoItems) {
        NSMutableArray *mArr = [NSMutableArray array];
        [mArr addObject:[NewAddressItem itemWithPlaceholder:@"收货人" andText:self.info.name]];
        [mArr addObject:[NewAddressItem itemWithPlaceholder:@"手机号" andText:self.info.mobile]];
        [mArr addObject:[NewAddressItem itemWithPlaceholder:@"身份证" andText:self.info.personid]];
        [mArr addObject:[NewAddressItem itemWithPlaceholder:@"123" andText:@"23567"]];
        NewAddressItem *areaItem =  [NewAddressItem itemWithPlaceholder:@"省市区" andText:self.info.area];
        @weakify(self);
        areaItem.tapBlock  = ^{//处理省市区
            @strongify(self);
            [self hanldeArea];
        };
        [mArr addObject:areaItem];
        
        [mArr addObject:[NewAddressItem itemWithPlaceholder:@"详细地址" andText:self.info.address]];
        
        _infoItems = [mArr copy];
    }
    return _infoItems;
}

- (void)hanldeArea
{
    [self.view endEditing:YES];
    
    ESDistrictPickerView *pickerView = [[ESDistrictPickerView alloc] init];
    [pickerView showPickerView];
    @weakify(self);
    pickerView.sureBlock             = ^(DistrictInfo *province,DistrictInfo *city,DistrictInfo *area){
        @strongify(self);
        self.provinceInfo   = province;
        self.cityInfo       = city;
        self.areaInfo       = area;
        
        

            NewAddressItem *areaItem = [self.infoItems objectAtIndex:4];
            areaItem.text       = [NSString stringWithFormat:@"%@ %@ %@",province.name,city.name,area.name];

        [self.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:4 inSection:0]] withRowAnimation:UITableViewRowAnimationAutomatic];
    };
}

#pragma mark - LifeCycle
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationItem.title = @"收货地址管理";
//    [self initalizedCumstomNav];
    [self.view addSubview:self.tableView];
    self.tableView.scrollEnabled=NO;
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(@0);
        make.top.equalTo(@0);
        make.height.equalTo(@(64*7));
    }];
    
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    [button setTitle:@"保存" forState:UIControlStateNormal];
    [button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    button.titleLabel.font=[UIFont systemFontOfSize:15];
    button.backgroundColor = RGB(233, 40, 46);
//    button.layer.cornerRadius=5;
//    button.layer.masksToBounds=YES;
    [button addTarget:self action:@selector(btnClick) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:button];
    [button mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(@0);
        make.left.equalTo(@0);
        make.right.equalTo(@0);
        make.height.equalTo(@49);
    }];
}

-(void)btnClick
{
    [self addAddress];
}

#pragma mark
#pragma mark - tableview代理方法;
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.infoItems.count;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    if (indexPath.row==3) {
        
        /*自动计算Label的高度*/

    
    CGRect rect=[self.tipStr boundingRectWithSize:CGSizeMake(ScreenWidth-50, 100) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:13]} context:nil];
        self.h=rect.size.height;
        return rect.size.height+6;
         }else{
        return 64;
    };
    return 0;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    //            NormalWebViewController *vc = [[NormalWebViewController alloc] init];
    //            vc.hidesBottomBarWhenPushed = YES;
    //            [self.navigationController pushViewController:vc animated:NO];
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row==3) {
        
        UITableViewCell*cell=[[UITableViewCell alloc]init];
        UIView*view=[[UIView alloc]initWithFrame:CGRectMake(10, 0, ScreenWidth-20, self.h+6)];
        view.backgroundColor=RGB(240, 240, 240);
        view.layer.cornerRadius=5;
        view.layer.masksToBounds=YES;
        UILabel*label=[[UILabel alloc]init];
        label.font=[UIFont fontWithName:@"Arial-BoldMT" size:13];
        label.numberOfLines=0;
        label.text=self.tipStr;
        [view addSubview:label];
        [label mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(@3);
            make.left.equalTo(@10);
            make.right.equalTo(@(-5));
        }];
        [cell.contentView addSubview:view];
       // cell.detailTextLabel.text=@"1234";
        return cell;
    }else{
        
        NewAddressCell *cell = [tableView dequeueReusableCellWithIdentifier:kIdNewAddressCell forIndexPath:indexPath];
        cell.info=self.info;
        cell.item       = [self.infoItems objectAtIndex:indexPath.row];
        //点击定位按钮的回调
        cell.tapBlock=^(){
            ESLocationManager*manager=[ESLocationManager shareManager];
            [manager createLocation];
            manager.sucessBlock=^(NSString*stateStr,NSString*loaclity,NSString*subLocality){
                NewAddressItem *areaItem = [self.infoItems objectAtIndex:4];
                areaItem.text =[NSString stringWithFormat:@"%@%@%@",stateStr,loaclity,subLocality];
                
                [self.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:4 inSection:0]] withRowAnimation:UITableViewRowAnimationAutomatic];
            };
            
        };
        return cell;
    }
    return nil;
}

#pragma mark
#pragma mark lazy init
- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.delegate = self;
        _tableView.tableFooterView = [[UIView alloc] init];
        [_tableView registerClass:[NewAddressCell class] forCellReuseIdentifier:kIdNewAddressCell];
    }
    return _tableView;
}
#pragma mark 判断输入框的内容是否符合格式
/**判断是不是手机号码**/
-(BOOL)isMobileNumberClassification:(NSString*)mobile{
    NSString * MOBIL = @"^\\d{11}$";//11位数字正则
    NSPredicate *regextestmobil = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", MOBIL];
    return [regextestmobil evaluateWithObject:mobile];
    /**
     * 手机号码
     * 移动：134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188,1705
     * 联通：130,131,132,152,155,156,185,186,1709
     * 电信：133,1349,153,180,189,1700
     */
    //    NSString * MOBILE = @"^1((3//d|5[0-35-9]|8[025-9])//d|70[059])//d{7}$";//总况
    
    /**
     10         * 中国移动：China Mobile
     11         * 134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188，1705
     12         */
    //NSString * CM = @"^1(34[0-8]|(3[5-9]|5[017-9]|8[278])//d|705)//d{7}$";
    NSString*CM = @"^1(3[4-9]|5[01789]|8[278])\\d{8,8}";
    /**
     
     15         * 中国联通：China Unicom
     16         * 130,131,132,152,155,156,185,186,1709
     17         */
    NSString * CU = @"^1((3[0-2]|5[256]|8[56])\\d|709)\\d{8}";
    /**
     20         * 中国电信：China Telecom
     21         * 133,1349,153,180,189,1700
     22         */
    NSString * CT = @"^1((33|53|8[09])\\d|349|700)\\d{8}";
    
    
    /**
     25         * 大陆地区固话及小灵通
     26         * 区号：010,020,021,022,023,024,025,027,028,029
     27         * 号码：七位或八位
     28         */
   // NSString * PHS = @"^0(10|2[0-5789]|\\d{3})\\d{7,8}";
    
    
    //    NSPredicate *regextestmobile = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", MOBILE];
    NSPredicate *regextestcm = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", CM];
    NSPredicate *regextestcu = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", CU];
    NSPredicate *regextestct = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", CT];
   // NSPredicate *regextestphs = [NSPredicate predicateWithFormat:@"SELF MATCHES %@",PHS];
    
    if (([regextestcm evaluateWithObject:mobile] == YES)
        || ([regextestct evaluateWithObject:mobile] == YES)
        || ([regextestcu evaluateWithObject:mobile] == YES)
        )
    {
        return YES;
    }
    else
    {
        return NO;
    }
}
#pragma mark - Networking
- (void)addAddress
{
    //添加一些逻辑判断
    if (((NewAddressItem *)self.infoItems[0]).text.length == 0) {
        TipViewAnimation*view=[[TipViewAnimation alloc]initWithFrame:CGRectMake(0, 0, 0, 0) andTip:@"请填写收货人"];
        [view show];
        return;
    }
    else{
        
    }
    
    
    if ([self isMobileNumberClassification:((NewAddressItem *)self.infoItems[1]).text]) {
        
    }else{
        CGFloat width= [@"请输入正确的手机号码" widthOfFont:[UIFont systemFontOfSize:15]];
        TipViewAnimation*view=[[TipViewAnimation alloc]initWithFrame:CGRectMake((ScreenWidth-width-20)/2.0, kKeyWindow.centerY-20, width+20, 40) andTip:@"请输入正确的手机号码"];
        [view show];
        return;
    }
    if ([((NewAddressItem *)self.infoItems[2]).text isEqualToString:@""]) {
        
                //return;
    }
    if(((NewAddressItem *)self.infoItems[2]).text.length==18){
        
    }else{
        
        TipViewAnimation*view=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"请输入正确的身份证"];
        [view show];
        return;
    }
    
    
    if (((NewAddressItem *)self.infoItems[4]).text.length == 0) {
        
        TipViewAnimation*view=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"请选择省市区"];
        [view show];
        return;
    }
    if (((NewAddressItem *)self.infoItems[5]).text.length == 0) {
        
            TipViewAnimation*view=[[TipViewAnimation alloc]initWithFrame:self.view.bounds andTip:@"请输入您的具体地址信息"];
            [view show];
        return;
    }
    
    if (self.isChangeAddress==YES) {
        EditAddressRequest *request = [EditAddressRequest request];
        request.aid =self.info.aid;
        request.name        = ((NewAddressItem *)self.infoItems[0]).text;
        request.mobile      = ((NewAddressItem *)self.infoItems[1]).text;
        request.personid    = ((NewAddressItem *)self.infoItems[2]).text;
        request.address     = ((NewAddressItem *)self.infoItems[5]).text;
        request.provinceid  = self.provinceInfo.did;
        request.cityid      = self.cityInfo.did;
        request.areaid      = self.areaInfo.did;
        [self.indicator startAnimationWithMessage:@"正在修改..."];
        @weakify(self);
        [ESService editAddressRequest:request success:^(AddressInfo *respone) {
            @strongify(self);
            [self endGSNetworking];
            
                        [ESToast showSuccess:@"修改成功！"];
            
                        if (self.addressBlock ) {
                            self.addressBlock(respone);
                        }
            
                        [self.navigationController popViewControllerAnimated:YES];
            
        } failure:^(NSError *error) {
            [self endGSNetworking];
        }];
        
        
        }else{
        AddAddressRequest *request = [AddAddressRequest request];
        request.name        = ((NewAddressItem *)self.infoItems[0]).text;
        request.mobile      = ((NewAddressItem *)self.infoItems[1]).text;
        request.personid    = ((NewAddressItem *)self.infoItems[2]).text;
        request.address     = ((NewAddressItem *)self.infoItems[5]).text;
        request.provinceid  = self.provinceInfo.did;
        request.cityid      = self.cityInfo.did;
        request.areaid      = self.areaInfo.did;
        [self.indicator startAnimationWithMessage:@"正在添加..."];
        @weakify(self);
        [ESService addAddressRequest:request success:^{
            @strongify(self);
            [self endGSNetworking];
            
            [ESToast showSuccess:@"添加成功！"];
            
            if (self.successBlock) {
                self.successBlock();
            }
            
            [self.navigationController popViewControllerAnimated:YES];
            
        } failure:^(NSError *error) {
            @strongify(self);
            [self endGSNetworking];
        }];

    }
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.indicator stopAnimation];
}


@end
