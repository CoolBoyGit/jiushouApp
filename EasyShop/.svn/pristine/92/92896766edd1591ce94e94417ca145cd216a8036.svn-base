//
//  MyOrderFooterView.m
//  EasyShop
//
//  Created by guojian on 16/5/22.
//  Copyright © 2016年 wcz. All rights reserved.
//

#import "MyOrderFooterView.h"

@interface MyOrderFooterView()

/** 分割线 */
@property (nonatomic,strong) UIView *lineView;
@property (nonatomic, strong) UILabel *productCountLabel;//共多少件
@property (nonatomic, strong) UILabel *productPriceLabe;;//应付总款
@property (nonatomic, strong) UIButton *cancelButton;//取消支付
@property (nonatomic, strong) UIButton *payButton;//立刻支付
@property (nonatomic ,strong) UIButton *applyButton;//申请退款

/** 分割view */
@property (nonatomic,strong) UIView *bottomView;

@end

@implementation MyOrderFooterView

- (void)setOrderInfo:(OrderInfo *)orderInfo
{
    _orderInfo = orderInfo;
    
    self.productCountLabel.text = [NSString stringWithFormat:@"共%@件",_orderInfo.total_goods_num];
    self.applyButton.hidden=YES;
    self.cancelButton.hidden = YES;
    self.payButton.hidden = YES;
    NSString *priceText = @"";
    switch (_orderInfo.orderStatus) {
        case OrderStatus_Cancel://取消订单
        {self.cancelButton.hidden = YES;
            self.payButton.hidden = YES;
            priceText = [NSString stringWithFormat:@"商品总价: ¥%@",_orderInfo.total_fee];
        }
            break;
        case OrderStatus_WaitPay://等待支付
        {
            priceText = [NSString stringWithFormat:@"应付总款: ¥%@",_orderInfo.total_fee];
            
            self.cancelButton.hidden = NO;
            self.payButton.hidden = NO;
            [self.cancelButton setTitle:@"取消支付" forState:UIControlStateNormal];
            [self.payButton setTitle:@"立即支付" forState:UIControlStateNormal];
        }
            break;
        case OrderStatus_WaitSend://待发货
        {
           self.applyButton.hidden=NO;
            [self.applyButton setTitle:@"申请退款" forState:UIControlStateNormal];
            priceText = [NSString stringWithFormat:@"已付款: ¥%@",_orderInfo.total_fee];
            
        }
            break;
        case OrderStatus_WaitReply://待评价
        {
            self.payButton.hidden = NO;
            [self.payButton setTitle:@"立刻评价" forState:UIControlStateNormal];
        }
            break;
        case OrderStatus_WaitSure://待确认
        {
            self.payButton.hidden = NO;
            [self.payButton setTitle:@"确认收货" forState:UIControlStateNormal];
        }
            break;
        
    }
    self.productPriceLabe.text = priceText;
    
    [self setNeedsLayout];
}

-(UIButton *)applyButton{
    if (_applyButton==nil) {
        
        _applyButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [_applyButton setTitle:@"申请退款" forState:UIControlStateNormal];
        _applyButton.titleLabel.font = [UIFont systemFontOfSize:15];
        _applyButton.layer.cornerRadius = 4;
        _applyButton.backgroundColor = RGB(233, 40, 46);
        [_applyButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [_applyButton addTarget:self action:@selector(applyButtonAction) forControlEvents:UIControlEventTouchUpInside];
    }
    return _applyButton;
}
- (instancetype)initWithReuseIdentifier:(NSString *)reuseIdentifier
{
    if (self = [super initWithReuseIdentifier:reuseIdentifier]) {
        
        self.contentView.backgroundColor = [UIColor whiteColor];
        
        [self.contentView addSubview:self.lineView];
        [self.contentView addSubview:self.productCountLabel];
        [self.contentView addSubview:self.productPriceLabe];
        [self.contentView addSubview:self.cancelButton];
        [self.contentView addSubview:self.payButton];
        [self.contentView addSubview:self.bottomView];
        [self.contentView addSubview:self.applyButton];
    }
    return self;
}

- (void)layoutSubviews
{
    [super layoutSubviews];
    
    [self.lineView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@(12));
        make.right.equalTo(@(-12));
        make.top.equalTo(@0);
        make.height.equalTo(@1);
    }];
    
    [self.productPriceLabe mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(@(-12));
        make.top.equalTo(self.lineView.mas_bottom).offset(5);
    }];
    
    [self.productCountLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(self.productPriceLabe.mas_left).offset(-12);
        make.centerY.equalTo(self.productPriceLabe);
    }];
    
    if (self.orderInfo) {
        switch (self.orderInfo.orderStatus) {
            case OrderStatus_WaitPay://等待支付
                
            case OrderStatus_WaitReply://待评价
            case OrderStatus_WaitSure://待确认
            {
                [self.payButton mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.right.equalTo(@(-12));
                    make.top.equalTo(self.productPriceLabe.mas_bottom).offset(12);
                    make.width.equalTo(@84);
                    make.height.equalTo(@30);
                }];
                
                [self.cancelButton mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.right.equalTo(self.payButton.mas_left).offset(-20);
                    make.top.equalTo(self.productPriceLabe.mas_bottom).offset(12);
                    make.width.equalTo(@84);
                    make.height.equalTo(@30);
                }];
            }
                break;
            case OrderStatus_Cancel:
            case OrderStatus_WaitSend://待发货
            {
                [self.applyButton mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.right.equalTo(@(-12));
                    make.top.equalTo(self.productPriceLabe.mas_bottom).offset(12);
                    make.width.equalTo(@84);
                    make.height.equalTo(@30);
                }];
                
            }
                break;
        }
    }
    
    [self.bottomView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@0);
        make.right.equalTo(@0);
        make.top.equalTo(self.contentView.mas_bottom).offset(-15);
        make.height.equalTo(@15);
    }];
}

- (UIView *)lineView
{
    if (!_lineView) {
        _lineView = [[UIView alloc] init];
        _lineView.backgroundColor = RGB(240, 240, 240);
    }
    return _lineView;
}

- (UILabel *)productCountLabel
{
    if (_productCountLabel == nil) {
        _productCountLabel = [[UILabel alloc] init];
        _productCountLabel.textColor = [UIColor blackColor];
        _productCountLabel.font = [UIFont systemFontOfSize:15];
    }
    return _productCountLabel;
}

- (UILabel *)productPriceLabe
{
    if (_productPriceLabe == nil) {
        _productPriceLabe = [[UILabel alloc] init];
        _productPriceLabe.textColor = [UIColor blackColor];
        _productPriceLabe.font = [UIFont systemFontOfSize:15];
    }
    return _productPriceLabe;
}

-(UIButton *)cancelButton
{
    if (_cancelButton == nil) {
        _cancelButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [_cancelButton setTitle:@"取消订单" forState:UIControlStateNormal];
        _cancelButton.titleLabel.font = [UIFont systemFontOfSize:15];
        _cancelButton.layer.borderWidth = 1;
        _cancelButton.layer.cornerRadius = 4;
        _cancelButton.layer.borderColor = RGB(159, 159, 159).CGColor;
        [_cancelButton addTarget:self action:@selector(cancelAction) forControlEvents:UIControlEventTouchUpInside];
        [_cancelButton setTitleColor:RGB(159, 159, 159) forState:UIControlStateNormal];
    }
    return _cancelButton;
}

-(UIButton *)payButton
{
    if (_payButton == nil) {
        _payButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [_payButton setTitle:@"立即付款" forState:UIControlStateNormal];
        _payButton.titleLabel.font = [UIFont systemFontOfSize:15];
        _payButton.layer.cornerRadius = 4;
        _payButton.backgroundColor = RGB(233, 49, 46);
        [_payButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [_payButton addTarget:self action:@selector(payButtonAction) forControlEvents:UIControlEventTouchUpInside];
    }
    return _payButton;
}

- (UIView *)bottomView
{
    if (!_bottomView) {
        _bottomView = [[UIView alloc] init];
        _bottomView.backgroundColor = RGB(240, 240, 240);
    }
    return _bottomView;
}

- (void)cancelAction
{
    if (self.cancleBlock) {
        self.cancleBlock();
    }
}

-(void)payButtonAction
{
    if (self.rightBlock) {
        self.rightBlock();
    }
}
-(void)applyButtonAction{
    if (self.applyMoney) {
        self.applyMoney();
    }
}
@end
