//
//  ShopCartViewController.m
//  EasyShop
//
//  Created by 脉融iOS开发 on 16/4/8.
//  Copyright © 2016年 wcz. All rights reserved.
//
#import "ESShopCartViewController.h"
#import "ESShopCartCell.h"
#import "ESProductViewCell.h"
#import "ESShopBottomView.h"
#import "ESSpecialSaleView.h"
#import "ESPayListController.h"
#import "ESCartShopHeaderView.h"
#import "ESHomeShopDetailController.h"
#import "ESSureOrderController.h"
#import "ESShopCartNoneCell.h"
#import "ESHomeShopDetailController.h"
#import "GoodsListViewController.h"

@interface ESShopCartViewController()<UITableViewDataSource,UITableViewDelegate,UICollectionViewDelegate,UICollectionViewDataSource>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) ESSpecialSaleView      *specialShop;//今日特卖
@property (strong, nonatomic) UICollectionView                      *bottomCollectionView;
@property (nonatomic, strong) ESShopBottomView                *shopBottomView;

/** indicator */
@property (nonatomic,strong) ESIndicator *indicator;

/** 是否为空 */
@property (nonatomic,assign,readonly) BOOL isEmpty;
/** 购物车信息 */
@property (nonatomic,strong) CartInfo *cartInfo;

/** 推荐商品 */
@property (nonatomic,strong) NSArray *relatedItems;

@end

@implementation ESShopCartViewController

- (BOOL)isEmpty
{
    if (self.cartInfo) {
        if (self.cartInfo.shopsItems && self.cartInfo.shopsItems.count > 0) {
            return NO;
        }
    }
    return YES;
}

- (ESIndicator *)indicator
{
    if (!_indicator) {
        _indicator = [ESIndicator indicatorToView:self.view];
    }
    return _indicator;
}


#pragma mark - LifeCycle
- (void)viewDidLoad
{
    [super viewDidLoad];
    [self addNotification];
    self.navigationItem.title = @"购物车";
    self.view.backgroundColor=[UIColor redColor];
    [self.view addSubview:self.tableView];
//    [self initalizedCumstomNav];
    //NSLog(@"%f",self.view.frame.size.height);
    self.tableView.tableFooterView = self.specialShop;
    [self.specialShop addSubview:self.bottomCollectionView];
    [self.bottomCollectionView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(@0);
        make.top.equalTo(@40);
        make.height.equalTo(@460);
    }];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(@0);
        make.top.equalTo(@0);
        make.bottom.equalTo(@(-44));
    }];
    [self.view addSubview:self.shopBottomView];
    @weakify(self);
    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        @strongify(self);
        [self fetchCart];
    }];
    
//    CGFloat bottomEdge = 44;
//    if (self.isHome) {
//        //bottomEdge += 49;
//    }
    //self.tableView.backgroundColor=[UIColor yellowColor];
    //self.tableView.contentInset = UIEdgeInsetsMake(0, 0, bottomEdge, 0);
    
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    [self fetchCart];
}

- (void)dealloc
{
    [self removeNotification];
}

#pragma mark - Notification
- (void)addNotification
{
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(userDidLogin) name:kUserLoginNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(userDidLogout) name:kUserLogoutNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(cartInfoUpdate) name:kCartInfoUpdateNotification object:nil];
}

- (void)removeNotification
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

- (void)userDidLogin
{
    [self fetchCart];
}
- (void)userDidLogout
{
    self.cartInfo = nil;
    [self.tableView reloadData];
}
- (void)cartInfoUpdate
{
    [self fetchCart];
}


#pragma mark - UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if (self.isEmpty) {
        return 1;
    }
    return self.cartInfo.shopsItems.count;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (self.isEmpty) {
        return 1;
    }
    CartShopInfo *info = [self.cartInfo.shopsItems objectAtIndex:section];
    return info.goodsItems.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (self.isEmpty) {//在这里判断是否有数据
        ESShopCartNoneCell *cell = [tableView dequeueReusableCellWithIdentifier:kIDShopCartNoneCell forIndexPath:indexPath];
        @weakify(self);
        cell.gotoBlock = ^{
            @strongify(self);
            GoodsListViewController *list = [[GoodsListViewController alloc] init];
            [self.navigationController pushViewController:list animated:YES];
        };
        return cell;
    }
    ESShopCartCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ESShopCartCell"];
    CartShopInfo *info = [self.cartInfo.shopsItems objectAtIndex:indexPath.section];
    cell.goodsInfo = [info.goodsItems objectAtIndex:indexPath.row];
    @weakify(self);
    cell.tapToDetail=^{
        @strongify(self);
        ESHomeShopDetailController *shopDetailVc = [[ESHomeShopDetailController alloc] init];
                CartShopInfo *info          = [self.cartInfo.shopsItems objectAtIndex:indexPath.section];
                CartGoodsInfo *goodsInfo    = [info.goodsItems objectAtIndex:indexPath.row];
                shopDetailVc.goods_id       = goodsInfo.goods_id;
                [self.navigationController pushViewController:shopDetailVc animated:YES];
        

    };
    cell.selectedBlock = ^{
        @strongify(self);
        [self editGoodsStatusAtIndexPath:indexPath];
    };
    cell.operateBlock = ^(BOOL isAdd){
      @strongify(self);
        [self editCartGoodsAtIndexPath:indexPath isAdd:isAdd];
    };
    return cell;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (!self.isEmpty) {//有数据
        if (editingStyle == UITableViewCellEditingStyleDelete) {//删除
            [self deleteGoodsAtIndexPath:indexPath];
        }
    }
}

#pragma mark - UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (self.isEmpty) {
        return kHeightShopCartNone;
    }
    return 100;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (self.isEmpty) {
        return 0;
    }
    return kHeightESCartShopHeader;
}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    ESCartShopHeaderView *headerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:kIDESCartShopHeader];
    headerView.shopInfo             = [self.cartInfo.shopsItems objectAtIndex:section];
    @weakify(self);
    headerView.selectedBlock = ^(BOOL isSelected){
        @strongify(self);
        [self editShopStatusAtSection:section];
    };
    return headerView;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (self.isEmpty) {
        return 0;
    }
    return 15;
}
- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    UIView *view = [UIView new];
    view.backgroundColor = [UIColor clearColor];
    return view;
}

- (UITableViewCellEditingStyle) tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (!self.isEmpty) {
        return UITableViewCellEditingStyleDelete;
    }
    return UITableViewCellEditingStyleNone;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
//    if (!self.isEmpty) {
//        ESHomeShopDetailController *shopDetailVc = [[ESHomeShopDetailController alloc] init];
//        CartShopInfo *info          = [self.cartInfo.shopsItems objectAtIndex:indexPath.section];
//        CartGoodsInfo *goodsInfo    = [info.goodsItems objectAtIndex:indexPath.row];
//        shopDetailVc.goods_id       = goodsInfo.goods_id;
//        [self.navigationController pushViewController:shopDetailVc animated:YES];
//    }
}


#pragma mark - lazy init

- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds];
        _tableView.dataSource = self;
        _tableView.backgroundColor = [UIColor colorWithRed:0.910 green:0.902 blue:0.910 alpha:1.00];
        _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        _tableView.delegate = self;
        _tableView.tableFooterView = [[UIView alloc] init];
        [_tableView registerClass:[ESShopCartCell class] forCellReuseIdentifier:@"ESShopCartCell"];
        [_tableView registerClass:[ESCartShopHeaderView class] forHeaderFooterViewReuseIdentifier:kIDESCartShopHeader];
        [_tableView registerClass:[ESShopCartNoneCell class] forCellReuseIdentifier:kIDShopCartNoneCell];
    }
    return _tableView;
}
-(ESSpecialSaleView *)specialShop
{
    if (!_specialShop) {
        _specialShop = [[ESSpecialSaleView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, 500)];
    }
    return _specialShop;
}
- (UICollectionView*)bottomCollectionView
{
    if(!_bottomCollectionView)
    {
        UICollectionViewFlowLayout *flowRight = [[UICollectionViewFlowLayout alloc] init];
        flowRight.scrollDirection = UICollectionViewScrollDirectionVertical;
        _bottomCollectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 10, ScreenWidth, 0) collectionViewLayout:flowRight];
        _bottomCollectionView.dataSource = self;
        _bottomCollectionView.delegate = self;
        _bottomCollectionView.scrollEnabled = NO;
        _bottomCollectionView.showsVerticalScrollIndicator = NO;
        _bottomCollectionView.showsHorizontalScrollIndicator = NO;
        [_bottomCollectionView setBackgroundColor:[UIColor clearColor]];
        [_bottomCollectionView registerClass:[ESProductViewCell class] forCellWithReuseIdentifier:@"ESProductViewCell"];
    }
    return _bottomCollectionView;
}

- (ESShopBottomView *)shopBottomView
{
    if (!_shopBottomView) {
        
        if (self.isHome) {
             _shopBottomView = [[ESShopBottomView alloc] initWithFrame:CGRectMake(0, ScreenHeight-44-64, ScreenWidth, 44)];
        }else{
             _shopBottomView = [[ESShopBottomView alloc] initWithFrame:CGRectMake(0, ScreenHeight-44-49, ScreenWidth, 44)];
        }
       
       
        @weakify(self);
        _shopBottomView.allSelectedBlock = ^(BOOL isSelected){//全选
            @strongify(self);
            ESLoginVerify
            
            [self editCartStatus:isSelected];
        };
        _shopBottomView.submitBlock = ^{//去结算
            @strongify(self);
            ESLoginVerify
            
            [self confirmOrder];

        };
    }
    return _shopBottomView;
}

#pragma mark - UICollectionView DataSource
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.relatedItems.count;
}

- (UICollectionViewCell*)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    ESProductViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"ESProductViewCell" forIndexPath:indexPath];
    cell.goodsInfo = [self.relatedItems objectAtIndex:indexPath.item];
    return cell;
}
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    return CGSizeMake((ScreenWidth-10)/2.0,230) ;
}
//定义每个UICollectionView 的 margin
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0,0,0,0);
}
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    GoodsInfo *info = [self.relatedItems objectAtIndex:indexPath.item];
    
    ESHomeShopDetailController *detail = [[ESHomeShopDetailController alloc] init];
//    detail.isNavHidden = YES;
    detail.goods_id = info.gid;
    [self.navigationController pushViewController:detail animated:YES];
}

#pragma mark - Networking

#pragma mark - 删除购物车商品
- (void)deleteGoodsAtIndexPath:(NSIndexPath *)indexPath
{
    CartShopInfo *info          = [self.cartInfo.shopsItems objectAtIndex:indexPath.section];
    CartGoodsInfo *goodsInfo    = [info.goodsItems objectAtIndex:indexPath.row];
    
    DeleteCartGoodsRequest *request = [DeleteCartGoodsRequest request];
    request.goods_id = goodsInfo.goods_id;
    
    @weakify(self);
    [self.indicator startAnimation];
    [ESService deleteCartGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [ESToast showSuccess:@"删除成功！"];
        [self fetchCart];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

#pragma mark - 增加数量
- (void)editCartGoodsAtIndexPath:(NSIndexPath *)indexPath isAdd:(BOOL)isAdd
{
    CartShopInfo *info          = [self.cartInfo.shopsItems objectAtIndex:indexPath.section];
    CartGoodsInfo *goodsInfo    = [info.goodsItems objectAtIndex:indexPath.row];
    
    EditCartGoodsRequest *request = [EditCartGoodsRequest request];
    request.cid     = goodsInfo.cid;
    request.n       = isAdd ? @1 : @-1;
    
    @weakify(self);
    [ESService editCartGoodsRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [self fetchCart];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
    
}

#pragma mark -  编辑购物车商品状态
- (void)editGoodsStatusAtIndexPath:(NSIndexPath *)indexPath
{
    CartShopInfo *info          = [self.cartInfo.shopsItems objectAtIndex:indexPath.section];
    CartGoodsInfo *goodsInfo    = [info.goodsItems objectAtIndex:indexPath.row];
    BOOL isSelected = goodsInfo.status.integerValue;//当前状态
    
    [self editStatusWithCid:goodsInfo.cid isSelected:isSelected];
}

/** 单个商店商品 */
- (void)editShopStatusAtSection:(NSInteger)section
{
    CartShopInfo *info  = [self.cartInfo.shopsItems objectAtIndex:section];
    
    BOOL isSelected     = info.isSelected;

    [self editStatusWithCid:info.cids isSelected:isSelected];
}
/** 整个购物车 */
- (void)editCartStatus:(BOOL)isSelected
{
    NSMutableString *mStr = [[NSMutableString alloc] init];
    for (CartShopInfo *info in self.cartInfo.shopsItems) {
        if ([mStr isEqualToString:@""]) {//空
            [mStr appendString:info.cids];
        }else{
            [mStr appendString:[NSString stringWithFormat:@",%@",info.cids]];
        }
    }
    
    [self editStatusWithCid:[mStr copy] isSelected:isSelected];
}


- (void)editStatusWithCid:(NSString *)cid isSelected:(BOOL)isSelected
{
    EditStatusRequest *request = [EditStatusRequest request];
    request.cid         = cid;
    request.status      = isSelected ? @0 : @1;
    
    @weakify(self);
    [ESService editStatusRequest:request success:^{
        @strongify(self);
        [self endGSNetworking];
        
        [self fetchCart];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

#pragma mark  查询购物车
- (void)fetchCart
{
    CartRequest *request = [CartRequest request];
    
    @weakify(self);
    [ESService cartRequest:request success:^(CartInfo *response) {
        @strongify(self);
        [self endGSNetworking];
        
        self.cartInfo                   = response;
        self.shopBottomView.cartInfo    = response;
        [self.tableView reloadData];
        
        //请求推荐商品
        [self fetchRelatedGoods];
        
    } failure:^(NSError *error) {
        @strongify(self);
        [self endGSNetworking];
    }];
}

#pragma mark - 推荐商品
- (void)fetchRelatedGoods
{
    GetRelatedGoodsRequest *request = [GetRelatedGoodsRequest request];
    request.goods_id = self.cartInfo.goodids;
    request.n        = @6;
    
    @weakify(self);
    [ESService getRelatedGoodsRequest:request success:^(NSArray *response) {
        @strongify(self);
        
        self.relatedItems = response;
        [self.bottomCollectionView reloadData];
        
    } failure:^(NSError *error) {
        
    }];
    
}

#pragma mark - 确认订单
- (void)confirmOrder
{

    @weakify(self);
    [self.indicator startAnimation];
    [ESService orderConfirmRequest:[OrderConfirmRequest request] success:^(OrderConfirmInfo *response) {
        @strongify(self);
        [self endGSNetworking];
        
        ESSureOrderController *order = [[ESSureOrderController alloc] init];
        order.isDetailShop=self.isHome;
        order.confirmInfo = response;
        [self.navigationController pushViewController:order animated:YES];
        
    } failure:^(NSError *error) {
       @strongify(self);
        [self endGSNetworking];
    }];
    
}

#pragma mark GSNetworking
- (void)endGSNetworking
{
    [self.indicator stopAnimation];
    [self.tableView.mj_header endRefreshing];
}

@end
